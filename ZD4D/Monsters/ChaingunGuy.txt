//================================================================================================================
//================================================================================================================
//
//	"D4D mode" version
//	Chaingunner, sprites "Megaherz"
//================================================================================================================
//================================================================================================================

/*
Rainbow Doom Monster Schematics
* Gains # health per level.

Uncommon
* 
	
Rare
* 
	
Epic
* 
	
Legendary
* 
	
Relic
* 

CURSED (Black)
* 

BLESSED (White)
* 
*/

Class D4ChaingunGuy : D4AbstractMonster //replaces Chaingunguy // : ChaingunGuy
{
	
	const CBAFlags = CBAF_AIMFACING|CBAF_PUFFTRACER|CBAF_NORANDOMPUFFZ|CBAF_NORANDOM;
	const SRailFlags = RGF_SILENT|RGF_FULLBRIGHT|RGF_NORANDOMPUFFZ|RGF_CENTERZ;
	double vangle;
	double p;
	int count;
	
	
	
	Default 
	{
		D4AbstractMonster.Replacing 'ChaingunGuy';
		D4AbstractMonster.UpgradeDropChance 260;
		D4AbstractMonster.CrateDropAmount 1;
		D4AbstractMonster.CrateDropChance 8;
		D4AbstractMonster.CashAmount 20;
		Health 70;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP +DONTCORPSE
		SeeSound "Doom4/Monsters/Razer/Sight";
		PainSound "Doom4/Monsters/Razer/Pain";
		DeathSound "Doom4/Monsters/Razer/Death";
		ActiveSound "Doom4/Monsters/Razer/Idle";
		Obituary "$OB_CHAINGUY";
		Dropitem "ChaingunAmmoOrWep";
		DamageFactor "PlasmaExploder", 0.3;	//because otherwise, zombiemen would be killing everyone else easily
		PainChance "StunBomb", 255;
		PainChance "GloryKill", 255;
		WoundHealth 20;
		+DOHARMSPECIES
		Tag "Hell Razor";
	}
	States
	{
	Spawn:
		HRZR AB 10 A_Look();
		Loop;
	See:
		HRZR AABBCCDD 3 D4Chase();
		Loop;
	Missile:
		HRZR E 1 
		{
			A_FaceTarget();
			A_PlaySound("Doom4/Monsters/LaserStart",CHAN_AUTO);
			A_PlaySound("Doom4/Monsters/Razer/Attack",CHAN_AUTO);
			A_StartBeam("RevenantLaserRed", (4, 3, 30), 1, "NoBloodPuff");
		}
		HRZR EEEEEEEEEEEEEEEEE 2 BRIGHT 	//prepares the beam
		{
			A_UpdateBeamTracer("PacifistPuff");
			A_FaceTarget(0,0,0,0,FAF_MIDDLE);
			//A_CustomRailgun(0,2,"","Red",RGF_FULLBRIGHT|RGF_NOPIERCING|RGF_SILENT|RGF_CENTERZ,0,0,"PacifistPuff",0,0,2048,3);
			
		}
		HRZR EEEEEEEEEEEEEEEEE 1
		{
			A_FaceTarget(1,1,0,0,FAF_MIDDLE);
			if (target && !(target is "PlayerPawn"))
				return ResolveState("Burning");
			A_UpdateBeamTracer("PacifistPuff");
			A_SpawnItemEx("LaserPowerUpSpark",8,4,32,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,SXF_NOCHECKPOSITION);
			return ResolveState(null);
		}
		HRZR E 0 A_PlaySound("Doom4/Monsters/ElectricDischarge",CHAN_AUTO);
	Burning:
		HRZR E 0 
		{
			if (target && !(target is "PlayerPawn"))
				A_FaceTarget(0,0,0,0,FAF_MIDDLE);	
			count = 0;
			vangle = pitch;
			A_StopBeam();
		}
		HRZR E 1 Bright		//fires the damaging one
		{
			// Performs the attack every 5 tics.
			if (!count)
				A_CustomBulletAttack(0,0,1,0,"PacifistPuffSMM",SMMLaserRange,CBAFlags,TargetPtr,"BigRedLaserDrillChaingunnerSpawner",30,4);
			
			A_SpawnItemEx("LaserPowerUpSpark",8,4,28,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,SXF_NOCHECKPOSITION);
			if ((count > 0) && (count % 5 == 0))
			{
				int dmg = random(3,8); 
				A_CustomRailgun(dmg,0,"","",SRailFlags,0,0,"NonPacifistPuffExtreme",0,0,32766,4,1.0,3.0,null,8);
			}
			StateLabel next = null;
			if (count++ >= 45)	next = "See";
			return ResolveState(next);
		}
		Wait;
	Pain:
		HRZR G 3 A_StopBeam();
		HRZR G 3 A_Pain();
		Goto See;
	Pain.StunBomb:
		HRZR G 0 { bNoPain = true; A_StopBeam();	}
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#" 0 { bNoPain = false; }
		Goto See;
	Death:
		"####" "#" 0  //loot drop
		{
			bThruActors = true;
		}
		HRZR I 5 ;
		HRZR J 5 A_Scream();
		HRZR K 5 A_NoBlocking();
		HRZR L 5;
		HRZR M -1 {bCorpse = true;}
		Stop;
		
	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:	
	XDeath:
		TNT1 A 10 CanRaise
		{
			XDeathGush();
			A_NoBlocking();	//just in case
			A_StopBeam();
		}
		---- A RezTimer CanRaise;
		Stop;
	Raise:
		---- A 0 CheckRespawn();
		HRZR M 3 DoResurrect();
		HRZR LKJI 3;
		---- A 0 DoResurrect(1);
		Goto See;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			A_StopBeam();
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("ChaingunnerHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		HRZR G 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		HRZR U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 
		{
			bSolid = false;
			A_KillChildren("None",KILS_KILLMISSILES,null,"LaserKillable");
		}
		HRZR AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;

	//------------------------------------------------------------------------
	// End of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	}
}

//==============================================================================
//==============================================================================
// Shield Chaingunner Sergeant
//==============================================================================
//==============================================================================

Class D4SergeantShield : D4AbstractMonster
{
	int Armor;
	Property Armor: Armor;
	Default 
	{
		D4AbstractMonster.Replacing 'ChaingunGuy';
		D4AbstractMonster.UpgradeDropChance 240;
		D4AbstractMonster.CrateDropAmount 1;
		D4AbstractMonster.CrateDropChance 8;
		D4AbstractMonster.CashAmount 30;
		Health 70;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP +DONTCORPSE
		SeeSound "chainguy/sight";
		PainSound "chainguy/pain";
		DeathSound "chainguy/death";
		ActiveSound "chainguy/active";
		AttackSound "chainguy/attack";
		Obituary "%o was pummeled by a possessed sergeant.";
		Dropitem "ChaingunAmmoOrWep";
		DamageFactor "PlasmaExploder", 0.3;	//because otherwise, zombiemen would be killing everyone else easily
		PainChance "StunBomb", 255;
		PainChance "GloryKill", 255;
		WoundHealth 20;
		Tag "Possessed Sergeant";
	}
	
	void A_PlasmaAttack()
	{
		A_PlaySound("Doom4/Monsters/PlasmaShotgun",CHAN_AUTO);
		int flags = CMF_AIMDIRECTION|CMF_OFFSETPITCH;
		
		A_FaceTarget(0,0);
		double acc = 7.0;
		for (int i = 0; i < 3; i++)
		{
			double ang = frandom(-acc, acc);
			double pit = pitch + frandom(-acc, acc);
			A_SpawnProjectile("ChaingunnerPlasmaBall", 30, 9, ang, flags, pit);
		}
	}
	
	States
	{
	Spawn:
		CPOS AB 10 A_Look();
		Loop;
	See:
		CPOS AABBCCDD 3 D4Chase();
		Loop;
	Missile:
		CPOS E 10 A_FaceTarget(0,0);
		CPOS FE 4 BRIGHT A_PlasmaAttack();
		CPOS F 1 bright A_CPosRefire;
		Goto Missile+1;
	Pain:
		CPOS G 3;
		CPOS G 3 A_Pain();
		Goto See;
	Raise:
		CPOS N 5 DoResurrect();
		CPOS MLKJIH 5;
		---- A 0 DoResurrect(1);
		Goto See;
		
	Pain.StunBomb:
		"####" "#" 0 { bNoPain = true; }
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#" 0 { bNoPain = false; }
		Goto See;
	Death:
		CPOS H 4 ;
		CPOS I 4 A_Scream();
		CPOS J 4 A_NoBlocking();
		CPOS KLM 4;
		CPOS N -1 {bCorpse = true;}
		Stop;

	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
		TNT1 A 10 CanRaise
		{
			XDeathGush();
			A_NoBlocking();	//just in case
		}
		---- A RezTimer CanRaise;
		Stop;
	Raise:
		CPOS M 4 DoResurrect(0);
		CPOS LKJIH 4;
		---- A 0 DoResurrect(1);
		Goto See;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("ChaingunnerHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		CPOS G 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		CPOS U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		CPOS AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
		
	}
}

Class ChaingunnerPlasmaBall : ZombiemanPlasmaBall
{
	Default 
	{
		Damage 1;
		Speed 30;
		FastSpeed 36;
		SeeSound "";
	}
	override void PostBeginPlay()
	{
		Actor.PostBeginPlay();
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
		//	Vel3DFromAngle(speed, angle, pitch);
			
		}
		Goto LooperSG;
	LooperSG:
		SPIR P 1 Bright Light("OrangeSmallPoint2")
		{
			if (HQ)
			{
				A_SpawnItemEx("ZombiePlasmaTrail",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
			}
		}
		Loop;
	}
}

Class NoBloodPuff : Actor 
{
	Default 
	{
		+NOINTERACTION
		+BLOODLESSIMPACT
		+PAINLESS
	}
	States
	{
	Spawn:
		TNT1 A 3;
		Stop;
	}
}

Class PacifistPuffCgunner : PacifistPuff
{
	States
	{
	Spawn:
		TNT1 A 50;
		Stop;
	}
}


Class LaserPowerUpSpark : Actor 
{
	Default 
	{
		//Translation "0:255=%[0,0,0]:[1.0,0.0,0.0]"
		+NOINTERACTION
		XScale 0.4;
		YScale 0.2;
		scale 0.25;
		RenderStyle "Add";
		Alpha 0.5;
		+FORCEXYBILLBOARD
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256,random(1,9));
		HSPL ABCDEFGHJ 0	{	return ResolveState("Perform");	}
	Perform:
		"####" "#" 1 Bright A_FadeOut(0.05);
		Wait;
	}
}

//Invisible to GZDoom renderer
Class CgunnerLaserInvisible : D4D_Projectile
{
	Default 
	{
		Speed 300;
		Radius 3;
		Height 6;
		DamageFunction (random(3,8));
		Decal "RedElectricDecal";
	}
	States
	{
	Spawn:
		TNT1 A 4;
		Loop;
	Death:
		TNT1 A 3;
		Stop;
	}
}

//Visible to ZDoom renderer
Class CgunnerLaser : D4D_Projectile	
{
	Default 
	{
		Speed 300;
		MissileType "ElectricRailTrail";
		MissileHeight 8;
		Radius 3;
		Height 6;
		DamageFunction (random(3,8));
		Decal "RedElectricDecal";
	}
	States
	{
	Spawn:
		TNT1 A 4;
		Loop;
	Death:
		TNT1 A 3;
		Stop;
	}
}





Class ElectricRailTrail : Actor 
{
	Default 
	{
		//Translation "0:255=%[0,0,0]:[1.5,0.0,0.0]"
		+NOINTERACTION
		Scale 0.25;
		RenderStyle "Add";
		Alpha 1.0;
		+FORCEXYBILLBOARD
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256,random(1,9));
		HSPL ABCDEFGHJ 0 { return ResolveState("Perform"); }
	Perform:
		"####" "#" 3 Bright;
		"####" "#" 1 Bright A_FadeOut(0.2);
		Wait;
	}
}


//================================================================================================================
//================================================================================================================
//
//	Regular Doom version 
//
//================================================================================================================
//================================================================================================================

Class D4OldChaingunGuy : D4AbstractMonster // : ChaingunGuy ////replaces ChaingunGuy
{
	
	Default 
	{
		D4AbstractMonster.Replacing 'ChaingunGuy';
		D4AbstractMonster.UpgradeDropChance 260;
		D4AbstractMonster.CrateDropAmount 1;
		D4AbstractMonster.CrateDropChance 8;
		D4AbstractMonster.CashAmount 20;
		Health 70;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP
		SeeSound "chainguy/sight";
		PainSound "chainguy/pain";
		DeathSound "chainguy/death";
		ActiveSound "chainguy/active";
		AttackSound "chainguy/attack";
		Obituary "$OB_CHAINGUY";
		Dropitem "Chaingun";
		
		PainChance "StunBomb", 255;
		PainChance "GloryKill", 255;
		WoundHealth 20;
		+DONTCORPSE
		Tag "Possessed Sergeant";
	}
	States
	{
	Spawn:
		CPOS AB 10 A_Look();
		Loop;
	See:
		CPOS AABBCCDD 3 D4Chase();
		Loop;
	Missile:
		CPOS E 10 A_FaceTarget();
		CPOS FE 4 BRIGHT A_CPosAttack;
		CPOS F 1 A_CPosRefire;
		Goto Missile+1;
	Pain:
		CPOS G 3;
		CPOS G 3 A_Pain();
		Goto See;
	Raise:
		CPOS N 5;
		CPOS MLKJIH 5;
		Goto See;
		
	Pain.StunBomb:
		"####" "#" 0 { bNoPain = true; }
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#" 0 { bNoPain = false; }
		Goto See;
	Death:
		CPOS H 4 {	bThruActors = true;	}
		CPOS I 4 A_Scream();
		CPOS J 4 A_NoBlocking();
		CPOS KLM 4;
		CPOS N -1 {bCorpse = true;}
		Stop;

	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
		CPOS O 4
		{
			bThruActors = true;
			XDeathGush();
		}
		
		CPOS P 4;
		CPOS Q 4 A_NoBlocking();
		CPOS RS 4;
		CPOS T -1 {bCorpse = true;}
		Stop;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("ChaingunnerHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		CPOS G 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		CPOS U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		CPOS AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
		
	}
}

Class ChaingunAmmoOrWep : Actor
{
	int rng;
	Default
	{
		+NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (CountInv("D4AssaultRifle",Player1))
			{
				rng = random(1,20);
				if (rng == 20 && !CountInv("D4Chaingun",Player1) && CountInv("D4Repeater",Player1))
				{
					A_DropItem("D4Chaingun",1);	return;
				}
				else if (rng <= 3 && !CountInv("D4Repeater",Player1) && GetCvar("MPWeapons"))
				{
					A_DropItem("D4Repeater",1);	return;
				}
				else
				{
					A_SpawnItemEx("D4PinataBulletsChaingunGuy",0,0,32,0,0,0,0,SXF_NOCHECKPOSITION);	return;
				}
			}
			else
			{
				A_DropItem("D4AssaultRifle",1);	return;
			}
			return;
		}
		Stop;
	}
}