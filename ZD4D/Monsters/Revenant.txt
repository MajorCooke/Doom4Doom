//================================================================================================================
//================================================================================================================
//
//	"D4D Mode" version
//
//================================================================================================================
//================================================================================================================

/*
Rainbow Doom Monster Schematics
* Gains # health per level.

Uncommon
* 
	
Rare
* 
	
Epic
* 
	
Legendary
* 
	
Relic
* 

CURSED (Black)
* 

BLESSED (White)
* 
*/

Class D4Revenant : D4AbstractBiggie //replaces Revenant
{
	int wep;
	int counter;
	
	Default 
	{
		D4AbstractMonster.Replacing 'Revenant';
		D4AbstractMonster.Rune "RevenantRune", RuneChance_Rev;
		D4AbstractMonster.CrateDropAmount 2;
		D4AbstractMonster.CrateDropChance 64;
		D4AbstractMonster.CashAmount 60;
		Health 400;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 14;
		PainChance 100;
		Monster;
		MeleeThreshold 196;
		+MISSILEMORE 
		+FLOORCLIP
		+DONTCORPSE
		SeeSound "Doom4/Monsters/Revenant/Sight";
		PainSound "Doom4/Monsters/Revenant/Pain";
		DeathSound "Doom4/Monsters/Revenant/Death";
		ActiveSound "Doom4/Monsters/Revenant/Idle";
		MeleeSound "skeleton/melee";
		HitObituary "$OB_UNDEADHIT";
		Obituary "$OB_UNDEAD";
		Scale 0.85;
		PainChance "StunBomb", 255;
		PainChance "GloryKill", 255;
		WoundHealth 80;
		Tag "Revenant";
	}
	
	States
	{
	Spawn:
		SKEL AB 10 A_Look();
		Loop;
	See:
		SKEL A 0
		{
			bSPRITEFLIP = false;
		}
	Chasing:
		SKEL AABBCCDDEEFF 2 D4Chase();
		Loop;
	Melee:
		SKEL G 0 { A_FaceTarget(); bSPRITEFLIP = random(0,1);	}
		SKEL G 6 A_SkelWhoosh();
		SKEL H 6 A_FaceTarget();
		SKEL I 6 A_SkelFist();
		Goto See;
	Missile:
		---- A 0 A_Jump(180,"Barrage");
		Goto TargettedRockets;
	TargettedRockets:
		SKEL K 10 
		{
			A_FaceTarget();
			A_PlaySound("Doom4/Monsters/Revenant/Attack",CHAN_AUTO);
		}
		SKEL K 0
		{
			A_StartBeam("RevenantLaserWhite", (0, -12, 50), 1, "NoBloodPuff");
			A_StartBeam("RevenantLaserWhite", (0, 12, 50), 1, "NoBloodPuff");
		}
		SKEL KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK 1
		{
			A_FaceTarget(0,0,0,0,FAF_MIDDLE);
			A_UpdateBeamTracer("NoBloodPuff");
		//	A_CustomRailgun(0,-12,"","Red",RGF_FULLBRIGHT|RGF_NOPIERCING|RGF_SILENT,1,0,"NoBloodPuff",0,0,2048,1,2,0,null,19);
		//	A_CustomRailgun(0,12,"","Red",RGF_FULLBRIGHT|RGF_NOPIERCING|RGF_SILENT,1,0,"NoBloodPuff",0,0,2048,1,2,0,null,19);
			
		}
		---- A 0 
		{
			A_StopBeam();
			A_StartBeam("RevenantLaserYellow", (0, -12, 50), 1, "NoBloodPuff");
			A_StartBeam("RevenantLaserYellow", (0, 12, 50), 1, "NoBloodPuff");
		}
		SKEL KKKKKKKK 1
		{
			A_FaceTarget(0,0,0,0,FAF_MIDDLE);
			A_UpdateBeamTracer("NoBloodPuff");

		}
		---- A 0 
		{
			A_StopBeam();
			A_StartBeam("RevenantLaserOrange", (0, -12, 50), 1, "NoBloodPuff");
			A_StartBeam("RevenantLaserOrange", (0, 12, 50), 1, "NoBloodPuff");
		}
		SKEL KKKKKKKK 1
		{
			A_FaceTarget(0,0,0,0,FAF_MIDDLE);
			A_UpdateBeamTracer("NoBloodPuff");
		}
		---- A 0 
		{
			A_StopBeam();
			A_StartBeam("RevenantLaserRed", (0, -12, 50), 1, "NoBloodPuff");
			A_StartBeam("RevenantLaserRed", (0, 12, 50), 1, "NoBloodPuff");
		}
		SKEL KKKKKK 1
		{
			A_FaceTarget(0,0,0,0,FAF_MIDDLE);
			A_UpdateBeamTracer("NoBloodPuff");

		}
		SKEL K 0
		{
			A_StopBeam();
			HQ = CheckEffects();
			wep = -1;
		}
		SKEL JJ 10 Bright
		{
			A_FaceTarget();
			Class<Actor> rawket = (HQ) ? "RevenantRocketFast" : "RevenantRocketFastLQ";
			A_SpawnProjectile(rawket,50,14 * wep,0);
			wep *= -1;
		}
		SKEL K 10;
		Goto See;
		
		
	Barrage:
		SKEL K 10 
		{
			HQ = CheckEffects();
			A_FaceTarget();
			wep = -1;
		}
	Looper:
		SKEL J 4 Bright
		{
			if (counter >= 8)
			{
				return ResolveState("EndMissiles");
			}
			
			A_FaceTarget();
			
		//	Class<Actor> rawket = (HQ) ? "RevenantRocketSpinning" : "RevenantRocketSpinningSimple";
			
			A_SpawnProjectile('RevenantRocketSpinning',50,14 * wep,0);
			wep *= -1;
			counter++;
			return ResolveState(null);
		}
		Loop;
	EndMissiles:
		SKEL K 10 
		{
			A_FaceTarget();
			counter = 0;
		}
		Goto See;
		
	Pain:
		SKEL L 5 A_StopBeam();
		SKEL L 5 A_Pain();
		Goto See;
	Pain.StunBomb:
		SKEL L 0 { bNoPain = true; A_StopBeam(); }
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#" 0 { bNoPain = false; }
		Goto See;
	Death:
		"####" "#" 0  //loot drop
		{
			bThruActors = true;
		}
		SKEL LM 5;
		SKEL N 5 A_Scream();
		SKEL O 5 A_NoBlocking();
		SKEL P 5;
		SKEL Q -1 {bCorpse = true;}
		Stop;
	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
		
		TNT1 A 0;
		TNT1 A 10
		{
			bThruActors = true;
			XDeathGush();
			A_NoBlocking();	//just in case
		}
		Stop;
	Raise:
		SKEL Q 5 DoResurrect();
		SKEL PONML 5;
		---- A 0 DoResurrect(1);
		Goto See;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			A_StopBeam();
			bSPRITEFLIP = false;
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("D4DRevenantHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		SKEL L 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		SKEL U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		SKEL AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" LLLLLL 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" LLLLLL 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
	}
}

Class RevenantRocketFast : D4D_Projectile
{
	Default 
	{
		Projectile;
		Speed 60;
		FastSpeed 90;
		DamageFunction (random(30,60));
		Radius 3;
		Height 6;
		Scale 0.6;
		+HITTRACER
		SeeSound "Player/Demon/Revenant/Fire";
		MissileType "RocketGasTrail";
		MissileHeight 8;
		Decal "D4ExploScorchSmall";
	}
	
	States
	{
	Spawn:
		SWMS A 1 Bright Light("OrangeMediumPoint3")
		{
			A_SpawnItemEx("MonsterRocketTrailFire",-5,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		}
		Wait;
	Death:
		TNT1 A 0 
		{
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(3,7),0,0,0,0,frandom(4.5,-4.5),frandom(4.5,-4.5),frandom(1,8),0,0,-0.4);
			A_PlaySound("Doom4/Weapon/Machinegun/MiniMissileExplo");
			A_SpawnItemEx("MGMiniMissileExploSlightlyBigger",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			return ResolveState("DeathCont");
		}
	DeathCont:
		//TNT1 A 0 A_Explode(48,64,0) //he'd end up killing himself more often than not if infighting
		TNT1 A 2 Light("OrangeMediumPoint2");
		TNT1 A 2 Light("OrangeMediumPoint3");
		TNT1 A 2 Light("OrangeSmallPoint1");
		TNT1 A 2 Light("OrangeSmallPoint2");
		TNT1 A 2 Light("OrangeSmallPoint3");
		Stop;
	}
}

Class RevenantRocketFastLQ : RevenantRocketFast
{
	Default
	{
		MissileType "";
	}
	States
	{
	Spawn:
		SWMS A 1 Bright Light("OrangeMediumPoint3");
		Wait;
	Death:
		TNT1 A 0
		{
			A_PlaySound("Doom4/Weapon/Machinegun/MiniMissileExplo");
			A_SpawnItemEx("MGMiniMissileExploSlightlyBigger",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			return ResolveState("DeathCont");
		}
		Goto DeathCont;
	}
}

Class RevenantRocketSpinning : D4AbstractMissile
{
	int value1;
	int value2;
	double value3;
	double value4;
	Default 
	{
		Projectile;
		Speed 25;
		FastSpeed 30;
		DamageFunction (10);
		Radius 3;
		Height 6;
		Scale 0.6;
		+HITTRACER
		+BRIGHT
		SeeSound "Doom4/Weapon/Machinegun/MiniMissileFire";
		Decal "D4ExploScorchSmallest";
	}
	
	States
	{
	Spawn:
		SWMS A 0 NODELAY 
		{
			int rng = random(1,62);
			A_Weave(rng, rng, 1.0, 1.0);
			StartRocketFX();
			return ResolveState("Moving");
		} //so that it starts at a random offset of the weave
	Moving:
		SWMS A 1 Bright Light("OrangeSmallPoint1") 
		{
			A_Weave(2,2,1.0,1.0);
			if (HQ)	SpawnRocketFX();
		}
		Wait;
	Death:
		TNT1 A 0 
		{
			bNOINTERACTION = bINVISIBLE = true;
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_PlaySound("Doom4/Weapon/Machinegun/MiniMissileExplo");
			A_SpawnItemEx("MGMiniMissileExplo",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			return ResolveState("DeathCont");
		}
	DeathCont:
		TNT1 A 2 Light("OrangeMediumPoint2");
		TNT1 A 2 Light("OrangeMediumPoint3");
		TNT1 A 2 Light("OrangeSmallPoint1");
		TNT1 A 2 Light("OrangeSmallPoint2");
		TNT1 A 2 Light("OrangeSmallPoint3");
		Stop;
	}
}

Class MonsterRocketTrailFire : Actor //centered flare behind the rocket
{
	Default 
	{
		+CLIENTSIDEONLY
		+NOINTERACTION
		+FORCEXYBILLBOARD
		+NOTONAUTOMAP
		RenderStyle "Add";
		Alpha 0.7;
		Scale 0.11;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_Jump(128,"Two");
	One:
		X007 ABCDE 1 Bright ;
		X007 FGHIJ 1 Bright A_FadeOut();
		Stop;
	Two:
		X007 KLMNO 1 Bright ;
		X007 PQRST 1 Bright A_FadeOut();
		Stop;		
	}
}
Class RocketGasTrail : Actor 
{
	Default 
	{
		+CLIENTSIDEONLY
		+NOINTERACTION
		+FORCEXYBILLBOARD
		RenderStyle "Add";
		Scale 0.1;
		Alpha 0.8;
	}
	States
	{
	Spawn:
		X102 V 2 A_FadeOut(0.08);
		Loop;
	}
}


//================================================================================================================
//================================================================================================================
//
//	Regular Doom version 
//
//================================================================================================================
//================================================================================================================

Class D4OldRevenant : D4AbstractBiggie // : Revenant ////replaces Revenant
{
	
	Default 
	{
		D4AbstractMonster.Replacing 'Revenant';
		D4AbstractMonster.Rune "RevenantRune", RuneChance_Rev;
		D4AbstractMonster.CrateDropAmount 2;
		D4AbstractMonster.CrateDropChance 64;
		D4AbstractMonster.CashAmount 60;
		Health 300;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 10;
		PainChance 100;
		Monster;
		MeleeThreshold 196;
		+MISSILEMORE 
		+FLOORCLIP
		SeeSound "skeleton/sight";
		PainSound "skeleton/pain";
		DeathSound "skeleton/death";
		ActiveSound "skeleton/active";
		MeleeSound "skeleton/melee";
		HitObituary "$OB_UNDEADHIT";
		Obituary "$OB_UNDEAD";
		PainChance "StunBomb", 255;
		+DONTCORPSE
		PainChance "GloryKill", 255;
		WoundHealth 80;
		Tag "Revenant";
	}
	States
	{
	Spawn:
		SKEL AB 10 A_Look();
		Loop;
	See:
		SKEL AABBCCDDEEFF 2 D4Chase();
		Loop;
	Melee:
		SKEL G 0 A_FaceTarget();
		SKEL G 6 A_SkelWhoosh;
		SKEL H 6 A_FaceTarget();
		SKEL I 6 A_SkelFist;
		Goto See;
	Missile:
		SKEL J 0 BRIGHT A_FaceTarget();
		SKEL J 10 BRIGHT A_FaceTarget();
		SKEL K 10 A_SkelMissile;
		SKEL K 10 A_FaceTarget();
		Goto See;
	Pain:
		SKEL L 5;
		SKEL L 5 A_Pain();
		Goto See;
	Raise:
		SKEL Q 5;
		SKEL PONML 5;
		Goto See;
		
	Pain.StunBomb:
		"####" "#" 0 { bNoPain = true; }
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#" 0 { bNoPain = false; }
		Goto See;
	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
		SKEL L 0 XDeathGush();
	Death:
		SKEL L 5 { bThruActors = true; }
		SKEL M 5;
		SKEL N 5 A_Scream();
		SKEL O 5 A_NoBlocking();
		SKEL P 5;
		SKEL Q -1 {bCorpse = true;}
		Stop;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("OldRevenantHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		SKEL L 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		SKEL U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		SKEL AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" LLLLLL 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" LLLLLL 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
	}
}

Class OldRevenantTracer : D4AbstractMissile //replaces RevenantTracer
{
	Default 
	{
		Radius 11;
		Height 8;
		Speed 10;
		Damage 10;
		Projectile; 
		+SEEKERMISSILE 
		+RANDOMIZE
		SeeSound "skeleton/attack";
		DeathSound "skeleton/tracex";
		RenderStyle "Add";
		Decal "D4ExploScorchSmall";
	}
	States
	{
	Spawn:
		FATB AB 2 BRIGHT A_Tracer;
		Loop;
	Death:
		TNT1 A 0 
		{
			if (HQ)
			{
				A_SpawnItemEx("CacoSmoke",0,0,0,frandom(0.1,1.0),0,frandom(-1.2,1.0),random(0,359),32);
				A_SpawnItemEx("CacoSmoke",0,0,0,frandom(0.1,1.0),0,frandom(-1.2,1.0),random(0,359),32);
				A_SpawnItemEx("CacoSmoke",0,0,0,frandom(0.1,1.0),0,frandom(-1.2,1.0),random(0,359),32);
				A_SpawnItemEx("CacoSmoke",0,0,0,frandom(0.1,1.0),0,frandom(-1.2,1.0),random(0,359),32);
				A_SpawnItemEx("CacoSmoke",0,0,0,frandom(0.1,1.0),0,frandom(-1.2,1.0),random(0,359),32);
				A_SpawnItemEx("CacoSmoke",0,0,0,frandom(0.1,1.0),0,frandom(-1.2,1.0),random(0,359),32);
			}
			A_SpawnItemEx("MGMiniMissileExploSlightlyBigger",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		}
		Stop;
	}
}