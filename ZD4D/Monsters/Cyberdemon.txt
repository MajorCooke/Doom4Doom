//================================================================================================================
//================================================================================================================
//
//	"D4D mode" version
//	
//================================================================================================================
//================================================================================================================

/*
Rainbow Doom Monster Schematics
* Gains # health per level.

Uncommon
* 
	
Rare
* 
	
Epic
* 
	
Legendary
* 
	
Relic
* 

CURSED (Black)
* 

BLESSED (White)
* 
*/

Class D4Cyberdemon : D4AbstractBoss //replaces Cyberdemon
{
	const LaserDistance = 2048.0;
	const ProjOffset = 22.0;
	const LaserOffset = 20.0;
	double offs[2]; // [0] = rocket, [1] = laser
	
	int rocketcount;
	Actor ChargeIndicator;
	override void Die(Actor source, Actor inflictor, int dmgflags)
	{
		if (DamageTypeReceived == 'BerserkKill' || 
			DamageTypeReceived == 'MeleePunch' || 
			DamageTypeReceived == 'ChainsawKill' || 
			DamageTypeReceived == 'ChainsawPinata')
		{
			for (int i = 0; i < 5; i++)
				A_DropItem("D4PinataHealth");
		}
		StopIndicator();
		Super.Die(source, inflictor, dmgflags);
	}
	
	Default 
	{
		D4AbstractMonster.Replacing 'Cyberdemon';
		D4AbstractMonster.ResurrectCvar 'D4D_ResCyberdemon';
		D4AbstractMonster.Rune "CyberdemonRune", RuneChance_Cyber;
		D4AbstractMonster.UpgradeDropChance 5;
		D4AbstractMonster.CrateDropAmount 3;
		D4AbstractMonster.CrateDropChance 192;
		D4AbstractMonster.CrateDropAlways 2;
		D4AbstractMonster.CashAmount 400;
		D4AbstractMonster.CashChainsawFinisher 2000;
		D4AbstractMonster.PowerColor 'D4Cyberdemon';
		Health 4000;
		Radius 40;
		Height 110;
		Mass 1000;
		Speed 16;
		PainChance 20;
		Monster;
		MinMissileChance 160;
		+BOSS 
		+BOSSDEATH
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+DONTCORPSE
		SeeSound "Doom4/Cyberdemon/Sight";
		PainSound "Doom4/Cyberdemon/Pain";
		DeathSound "Doom4/Cyberdemon/Death";
		ActiveSound "Doom4/Monsters/Cyberdemon/Idle";
		Obituary "$OB_CYBORG";
		DamageFactor "BFGExploder", 0.0;
		PainChance "GloryKill", 255;
		WoundHealth 150;
		Tag "Cyberdemon";
	}
	
	override void PostBeginPlay()
	{
		bSPRITEFLIP = random(0,1);
		offs[0] = (bSPRITEFLIP) ? ProjOffset : -ProjOffset;
		offs[1] = (bSPRITEFLIP) ? LaserOffset : -LaserOffset;
		Super.PostBeginPlay();
	}
	
	void CyberFireWave(double spawnheight = 10.0)
	{
		A_SpawnProjectile("FireWaveMain",spawnheight,0,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,10,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,20,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,30,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,40,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,-10,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,-20,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,-30,0,CMF_AIMOFFSET);
		A_SpawnProjectile("FireWaveMainSecondary",spawnheight,-40,0,CMF_AIMOFFSET);
	}
	
	void StartIndicator()
	{
		if (ChargeIndicator)
			ChargeIndicator.Destroy();
		
		ChargeIndicator = Spawn("CyberdemonChargeIndicator", pos, ALLOW_REPLACE);
		if (ChargeIndicator)
		{
			ChargeIndicator.Master = self;
			ChargeIndicator.Warp(self,30,offs[1],50,0,WARPF_NOCHECKPOSITION);
		}	
		if (target && target.player)
		{
			A_PlaySound("Doom4/Weapon/GaussGun/Charge2Start",7,1.0,0,ATTN_NONE); //if its aiming at player, you'll hear it for sure
		}
		else
		{
			A_PlaySound("Doom4/Weapon/GaussGun/Charge2Start",7); //if its aiming at Monster, no special attenuation
		}
	}
	
	void MoveIndicator()
	{
		if (ChargeIndicator)
			ChargeIndicator.Warp(self,30,offs[1],50,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
	}
	
	void StopIndicator()
	{
		if (ChargeIndicator)
			ChargeIndicator.Destroy();
	}
	
	States
	{
	Spawn:
		CYBR A 0;
	Idle:
		CYBR AB 10 A_Look();
		Loop;
	See:
		CYBR A 3 { D4Chase(); A_PlaySound("Doom4/Cyberdemon/Step", 6); }
		CYBR A 3 D4Chase();
		CYBR B 3 { D4Chase(); A_PlaySound("Player/Demon/MastermindStep", 5); }
		CYBR B 3 D4Chase();
		CYBR C 3 { D4Chase(); A_PlaySound("Doom4/Cyberdemon/StepMetal", 5); }
		CYBR CDD 3 D4Chase();
		Loop;
	Missile:
		---- A 0 
		{
			A_PlaySound("Doom4/Cyberdemon/Attack",CHAN_ITEM);
			if (target && Distance3DSquared(target) <= (LaserDistance ** 2))
				return A_Jump(256,"NormalRockets","StreamOfRockets","FireWave","LaserShot");
			return A_Jump(256,"NormalRockets","StreamOfRockets","FireWave");
		}
		
		StreamOfRockets:
			CYBR E 10 
			{
				A_FaceTarget();
				rocketcount = 0; //resets the counter, if it was interrupted before
			}
			
			StreamLoop:
				CYBR E 0
				{
					if (rocketcount++ >= 12)	//it shall fire 12 rockets max
					{
						rocketcount = 0; //resets the counter
						return ResolveState("See");
					}
					return ResolveState(null);
				}
				CYBR F 4 A_SpawnProjectile("CyberDemonRocketStream",56,offs[0],0);
				CYBR E 4 A_FaceTarget();
				CYBR E 0 A_MonsterRefire(0,"See");
				Loop;
				
	NormalRockets:
		CYBR E 6 A_FaceTarget();
		CYBR F 12 
		{
			if (A_MonsterRefire(0, "See"))	return ResolveState("See");
			A_SpawnProjectile("CyberdemonRocket",56,offs[0],0);
			return ResolveState(null);
		}
		CYBR E 12 A_FaceTarget();
		CYBR F 12 
		{
			if (A_MonsterRefire(0, "See"))	return ResolveState("See");
			A_SpawnProjectile("CyberdemonRocket",56,offs[0],0);
			return ResolveState(null);
		}
		CYBR E 12 A_FaceTarget();
		CYBR F 12 
		{
			if (A_MonsterRefire(0, "See"))	return ResolveState("See");
			A_SpawnProjectile("CyberdemonRocket",56,offs[0],0);
			return ResolveState(null);
		}
		Goto See;
		
	LaserShot:
		CYBR E 0 StartIndicator();
		CYBR EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1
		{
			double distcheck = 0.0;
			if (target)	distcheck = Distance3DSquared(target);
			bool check = distcheck > (LaserDistance ** 2);
			if (!target || target.health < 1 || A_MonsterRefire(0, "See") || check)	
			{
				StopIndicator();
				A_StopSound(7);
				if (check && target && target.health > 0 && CheckSight(target, SF_IGNOREVISIBILITY|SF_IGNOREWATERBOUNDARY))
					return A_Jump(256,"NormalRockets","StreamOfRockets","FireWave");
				return ResolveState("See");
			}
			else
			{
				A_FaceTarget();
				MoveIndicator();
				A_CustomRailgun(0,offs[0],"","Orange",RGF_FULLBRIGHT|RGF_NOPIERCING|RGF_SILENT,1,0,"PacifistPuff",0,0,LaserDistance,1,0,0,null,0);
			}
			return ResolveState(null);
		}
		CYBR E 7;
		CYBR F 12 
		{
			bool plr = target && (target is "PlayerPawn");
			if (!plr)
				A_FaceTarget();
			//shoots the fx only first
			A_CustomRailgun(0,offs[0],"Orange","",RGF_FULLBRIGHT|RGF_SILENT,1,0,"PacifistPuff",0,0,LaserDistance,35,0,frandom(1.5,3.0),null,0,270);
			A_CustomRailgun(0,offs[0],"Orange","",RGF_FULLBRIGHT|RGF_SILENT,1,0,"PacifistPuff",0,0,LaserDistance,35,0,frandom(1.5,3.0),null,0,180);
			A_CustomRailgun(0,offs[0],"Orange","",RGF_FULLBRIGHT|RGF_SILENT,1,0,"PacifistPuff",0,0,LaserDistance,35,0,frandom(1.5,3.0),null,0,90);
			A_CustomRailgun(0,offs[0],"Orange","",RGF_FULLBRIGHT|RGF_SILENT,1,0,"PacifistPuff",0,0,LaserDistance,35,0,frandom(1.5,3.0),null,0,0);
			// then the actual shot
			// The puff does the damage dealing to prevent accidental 1k damage rape on players.
			A_CustomRailgun(0,offs[0],"","Orange",RGF_FULLBRIGHT|RGF_SILENT,1,0,"CyberdemonRailPuff",0,0,LaserDistance,1,100,0,null,0);
			A_CustomBulletAttack(0,0,1,0,"PacifistPuff",2048,CBAF_AIMFACING|CBAF_PUFFTRACER,AAPTR_TARGET,"StaticTrailBigSpawner",0,0);
			int soundFlags = (plr) ? ATTN_NONE : ATTN_NORM;
			A_PlaySound("Doom4/Weapon/GaussGun/Charge2Fire",7,1.0,0,soundFlags); //if its aiming at player, you'll hear it for sure
			A_PlaySound("Doom4/Monsters/MastermindLaserFire",8,1.0,0,soundFlags); 			
		}
		CYBR E 12;
		Goto See;
		
	FireWave:
		CYBR E 10 A_FaceTarget();
		CYBR F 6 Bright CyberFireWave(10);
		CYBR EEEE 5 A_FaceTarget();
		CYBR F 6 Bright CyberFireWave(80);
		CYBR EEEE 5 A_FaceTarget();
		CYBR F 6 Bright CyberFireWave(10);
		Goto See;
		
	Pain:
		CYBR G 1 
		{
			StopIndicator();
			A_StopSound(7);
			A_Pain();
		}
		CYBR G 9;
		Goto See;
	Death:
		CYBR H 10 
		{
			bThruActors = true;
			A_SpawnItemEx("CyberdemonDeathFX",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER|SXF_SETTRACER|SXF_ORIGINATOR|SXF_TRANSFERTRANSLATION);
			A_SpawnItemEx("BossExploderSFX",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETTRACER|SXF_ORIGINATOR);
			
		}
		CYBR I 10 A_Scream();
		CYBR JKL 10;
		CYBR M 10 A_NoBlocking();
		CYBR NO 10;
		CYBR P 30;
	Dead:
		---- A -1 CanRaise 
		{
			A_BossDeath();
			bCorpse = true; 
		}
		Stop;
		
	Raise:
		CYBR O 10 DoResurrect();
		CYBR NMLKJIH 10;
		---- A 0 DoResurrect(1);
		Goto See;
		
	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
	
		CYBR H 0;
		CYBR H 10 
		{			
			if (DamagetypeReceived != 'Massacre')
			{
				A_SpawnItemEx("CyberdemonDeathFX",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER|SXF_SETTRACER|SXF_ORIGINATOR|SXF_TRANSFERTRANSLATION);
				A_SpawnItemEx("BossExploderSFX",0,0,0,0,0,0,0,32|SXF_SETTRACER|SXF_ORIGINATOR);
			}
		}
		CYBR I 10 A_Scream();
		CYBR JKL 10 { bThruActors = true; }
		CYBR M 10 A_NoBlocking();
		CYBR NO 10;
		CYBR P 30;
		Goto Dead;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			StopIndicator();
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("CyberdemonHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		CYBR G 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		CYBR U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		CYBR AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
	}
}

Class CyberdemonRailPuff : NoBloodPuff
{
	Default
	{
		+HITTRACER
		+PUFFONACTORS
		+PUFFGETSOWNER
		+ALWAYSPUFF
		Damage 0;
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		if (tracer)
		{
			int dmg = (tracer is "PlayerPawn") ? 100 : 1000;
			double ang = target ? target.angle : angle;
			tracer.DamageMobj(self, target, dmg, "Hitscan", DMG_USEANGLE, ang);
		}
		Destroy();
	}
}

//-------------------------------------------------
//laser attack
Class CyberdemonChargeIndicator : Actor 
{
	Default 
	{
		RenderStyle "Add";
		+NOINTERACTION
		+FORCEXYBILLBOARD
		Translation "0:255=%[0,0,0]:[2.0,1.3,0.3]";
		Scale 0.0;
		Alpha 0.01;
	}
	States
	{
	Spawn:
		X060 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 Bright NODELAY
		{
			A_FadeIn(0.014);
			A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}

Class CyberdemonLaserTrail : Actor 
{
	Default 
	{
		Projectile;
		+NOINTERACTION
		+FORCEXYBILLBOARD
		+PUFFGETSOWNER
		RenderStyle "Add";
		//Translation "0:255=223:208"
		Scale 0.15;
	}
	States
	{
	Spawn:
		X025 A 0 NODELAY 
		{	return A_Jump(256,2,4,6,8,10,12,14,16,18,20);	}
		X025 ACDEFGHIJKLMNOPQRSTUVWXY 0 A_Jump(256,"Play");
	Play:
		"####" "#" 4 BRIGHT;
		"####" "#" 1 BRIGHT
		{	
			A_FadeOut(0.03);
			//A_SetScale(Scale.X-0.01);
		}
		Wait;
	}
}

//-------------------------------------------------
//death effects
Class CyberdemonDeathFX : Actor 
{
	int UMax;
	int c;
	
	Default 
	{
		+NOINTERACTION
		+NOTONAUTOMAP
		RenderStyle "Add";
		Alpha 0.75;
		Translation "0:255=%[0,0,0]:[2,0,0]";
	}
	States
	{
	Spawn:
		TNT1 A 2 NoDelay
		{
			A_SetTics(random(2,5));
			A_Warp(MasterPtr,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_COPYVELOCITY);
			if (UMax == 0)
			{	UMax = random(6,11);	}
			
			if (!A_CheckSight("Null"))
			{
				A_SpawnItemEx("D4RocketExplosionNoGL",random(0,15),0,random(10,100),0,0,0,random(0,359),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERALPHA);
				
				if (random(1,4) <= 1 || c == 0)
				{
					A_SpawnItemEx("BloodGibDropper",random(0,15),0,random(20,80),vel.x,vel.y,vel.z,random(0,359),SXF_NOCHECKPOSITION|SXF_ABSOLUTEVELOCITY|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION);
					A_PlaySound("Doom4/Other/GibExplode",CHAN_AUTO);
				}
			}
			c++;
			
			if (c > UMax)
			{	return ResolveState("Null");	}
			return ResolveState(null);
		}
		Loop;
	}
}

//-----------------------------------------------
// Firewave attack
Class FireWaveMain : D4AbstractMissile
{
	Default 
	{
		Projectile;
		RenderStyle "None";
		Speed 20;
		FastSpeed 28;
		Radius 6;
		Height 12;
		Damage 1;
		+RIPPER
		+BLOODLESSIMPACT
		+PAINLESS
		SeeSound "Doom4/Monsters/FireWaveShoot";
		DeathSound "Doom4/Monsters/FireWaveCrash";
		DamageType "CyberdemonFireWave";
	}
	
	States
	{
	Spawn:
		BAL1 A 1 Bright NODELAY
		{
			if (HQ)
			{
				A_SpawnItemEx("FireWaveFx",random(0,-15),random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-8+random(0,-15),10+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-8+random(0,-15),-10+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-16+random(0,-15),20+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-16+random(0,-15),-20+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-24+random(0,-15),30+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-24+random(0,-15),-30+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-32+random(0,-15),40+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("FireWaveFx",-32+random(0,-15),-40+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION);
			}
			else
			{
				A_SpawnItemEx("FireWaveFx",random(0,-15),random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-8+random(0,-15),10+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-8+random(0,-15),-10+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-16+random(0,-15),20+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-16+random(0,-15),-20+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-24+random(0,-15),30+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-24+random(0,-15),-30+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-32+random(0,-15),40+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
				A_SpawnItemEx("FireWaveFx",-32+random(0,-15),-40+random(8,-8),0,0,0,frandom(0.1,0.6),0,SXF_NOCHECKPOSITION,128);
			}
		}
		Loop;
	Death:
		TNT1 A 10;
		Stop;
	}
}

Class FireWaveMainSecondary : FireWaveMain
{
	Default 
	{
		SeeSound "";
		DeathSound "";
	}
	States
	{
	Spawn:
		BAL1 A 1 Bright;
		Loop;
	}
}
Class FireWaveFx : Actor 
{
	Default 
	{
		+NOINTERACTION
		+FORCEXYBILLBOARD
		RenderStyle "Add";
		Alpha 0.8;
		Scale 0.28;
	}
	States
	{
	Spawn:
		PROJ D 0 NODELAY A_Jump(220,5,6,7,8,9,10,11,12,13);
		X056 ABCDEFGHIJKLMNOPR 1 Bright;
		Stop;
	}
}

//-----------------------------------------------
// Regular rockets
Class CyberdemonRocket : D4AbstractMissile
{
	Default 
	{
		Projectile;
		+EXTREMEDEATH
		+BRIGHT
		Speed 23;
		Radius 6;
		Height 12;
		Scale 0.6;
		Damage 20;
		FastSpeed 30;
		SeeSound "Doom4/Weapon/RocketLauncher/Fire";
		DeathSound "Doom4/Weapon/RocketLauncher/HRExplo";
		Decal "D4ExploScorch";
	}
	
	States
	{
	Spawn:
		MICR A 0 Light("RedMediumPoint3") NoDelay 
		{
			StartRocketFX();
			A_PlaySound("Doom4/Monsters/RocketFlyLoop",7,0.7,1);
		}
	Moving:
		MICR A 1 Light("RedMediumPoint3") SpawnRocketFX();
		Loop;
	Death:
		TNT1 A 0 
		{
			bINVISIBLE = bNOINTERACTION = true;
			A_Explode(128,128);	//deals good damage to player. But less than vanilla's doom
			A_QuakeEx(2,2,2,15,0,256,"",QF_SCALEDOWN,0,0,0,1);			
			
			if (HQ)
			{
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
			}
			A_SpawnItemEx("D4RocketExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		}
		TNT1 A 35;
		Stop;
	}
}

//-----------------------------------------------
// Stream of rockets
Class CyberDemonRocketStream : D4AbstractMissile
{
	Default 
	{
		Projectile;
		+EXTREMEDEATH
		+BRIGHT
		Speed 21;
		FastSpeed 28;
		Radius 6;
		Height 12;
		Scale 0.4;
		DamageFunction (20);
		SeeSound "Doom4/Weapon/RocketLauncher/Fire";
		DeathSound "Doom4/Weapon/RocketLauncher/HRExplo";
		Decal "D4ExploScorchSmall";
	}
	States
	{
	Spawn:
		MICR A 1 Light("RedMediumPoint3") NoDelay 
		{
			StartRocketFX();
			A_PlaySound("Doom4/Monsters/RocketFlyLoop",7,0.7,1);
		}
	Moving:
		MICR A 1 Light("RedMediumPoint3");
		Loop;
	Death:
		TNT1 A 10 
		{
			//DestroyFX();
			bINVISIBLE = bNOINTERACTION = true;
			A_Explode(32,80,0);
			A_QuakeEx(1,1,1,10,0,160,"",QF_SCALEDOWN,0,0,0,1);
			if (HQ)
			{
				for (int i = 0; i < 3; i++)
					A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
			}
			A_SpawnItemEx("CyberdemonRocketExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		}
		Stop;
	}
}

Class CDRocketFlare : D4RocketTrailFire2 //centered flare behind the rocket
{
	Default 
	{
		+CLIENTSIDEONLY
		+NOINTERACTION
		+FORCEXYBILLBOARD
		RenderStyle "Add";
		Alpha 0.7;
		Scale 0.15;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256,"One","Two");
	One:
		X007 BDE 1 Bright ;
		X007 GIJ 1 Bright A_FadeOut();
		Stop;
	Two:
		X007 LNO 1 Bright ;
		X007 QST 1 Bright A_FadeOut();
		Stop;		
	}
}
Class CyberdemonRocketExplosion : D4RocketExplosion 
{
	Default 
	{
		D4RocketExplosion.Flames 1, 3;
		Scale 0.85;
	}
}
//================================================================================================================
//================================================================================================================
//
//	Regular Doom version 
//
//================================================================================================================
//================================================================================================================
Class D4OldCyberdemon : D4AbstractBoss // : Cyberdemon
{
	
	Default 
	{
		D4AbstractMonster.Replacing 'Cyberdemon';
		D4AbstractMonster.Rune "CyberdemonRune", RuneChance_Cyber;
		D4AbstractMonster.UpgradeDropChance 5;
		D4AbstractMonster.CrateDropAmount 3;
		D4AbstractMonster.CrateDropChance 192;
		D4AbstractMonster.CrateDropAlways 2;
		D4AbstractMonster.CashAmount 400;
		D4AbstractMonster.CashChainsawFinisher 2000;
		Health 4000;
		Radius 40;
		Height 110;
		Mass 1000;
		Speed 16;
		PainChance 20;
		Monster;
		MinMissileChance 160;
		+BOSS 
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+BOSSDEATH
		+DONTCORPSE
		SeeSound "cyber/sight";
		PainSound "cyber/pain";
		DeathSound "cyber/death";
		ActiveSound "cyber/active";
		Obituary "$OB_CYBORG";
		DamageFactor "BFGExploder", 0.0;
		PainChance "GloryKill", 255;
		WoundHealth 150;
		Tag "Cyberdemon";
	}
	States
	{
	Spawn:
		CYBR AB 10 A_Look();
		Loop;
	See:
		CYBR A 3 A_Hoof;
		CYBR ABBCC 3 D4Chase();
		CYBR D 3 A_Metal;
		CYBR D 3 D4Chase();
		Loop;
	Missile:
		CYBR E 6 A_FaceTarget();
		CYBR F 12 A_CyberAttack;
		CYBR E 12 A_FaceTarget();
		CYBR F 12 A_CyberAttack;
		CYBR E 12 A_FaceTarget();
		CYBR F 12 A_CyberAttack;
		Goto See;
	Pain:
		CYBR G 10 A_Pain();
		Goto See;
	GloryEnd:
		CYBR H 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
		CYBR H 0 XDeathGush();
	Death:
		CYBR H 10 {	bThruActors = true;	}
		CYBR I 10 A_Scream();
		CYBR JKL 10;
		CYBR M 10 A_NoBlocking();
		CYBR NO 10;
		CYBR P 30;
		CYBR P -1 {bCorpse = true;}
		Stop;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("CyberdemonHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		CYBR G 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		CYBR U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		CYBR AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION) ;
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" GGGGGG 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
	}
}

Class OldCyberdemonRocket : D4AbstractMissileQuake //replaces Rocket ////replaces rocket since this is the only actor in all D4D who uses "rocket"
{
	Default 
	{
		Radius 11;
		Height 8;
		Speed 20;
		Damage 20;
		Projectile;
		+RANDOMIZE
		+DEHEXPLOSION
		+ROCKETTRAIL
		+BRIGHT
		Obituary "$OB_MPROCKET";
		
		SeeSound "Doom4/Weapon/RocketLauncher/Fire";
		DeathSound "Doom4/Weapon/RocketLauncher/HRExplo";
		Decal "D4ExploScorch";
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		if (!HQ)
		{
			A_SetScale(Scale.X * 1.5);
		}
	}
	
	States
	{
	Spawn:
		MICR A 3 Light("RedMediumPoint3") NoDelay 
		{
			A_PlaySound("Doom4/Monsters/RocketFlyLoop",7,0.7,1);
			StartRocketFX();
		}
	Moving:
		MICR A 1 Light("RedMediumPoint3") SpawnRocketFX();
		Loop;
	Death:
		TNT1 A 50 
		{
			bINVISIBLE = bNOINTERACTION = true;
			A_Explode(128,128);	//deals good damage to player. But less than vanilla's doom
			A_QuakeEx(2,2,2,15,0,256,"",QF_SCALEDOWN,0,0,0,1);
			
			
			if (HQ)
			{
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
			}
			A_SpawnItemEx("D4RocketExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		}
		Stop;
	}
}