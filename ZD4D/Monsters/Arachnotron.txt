//==============================================================================
//==============================================================================
//
//	"D4D mode" version
//
//==============================================================================
//==============================================================================

/*
Rainbow Doom Arachnotron Schematics
* Gains 100 health per level.

Uncommon
* Has a chance to shoot extra bolts. 
	
Rare
* Chance to shotgun spray
	
Epic
* Attacks almost instantaneously
	
Legendary
* Much more aggressive and retaliatory. Can dodge around
	
Relic
* Merges shotgun and stream into one, shooting vast sprays of plasma.

CURSED (Black)
* Shoots single spider mastermind bolts without hesitation but cannot dodge.

BLESSED (White)
* Like cursed but shoots multiple.
*/

Class D4Arachnotron : D4AbstractBiggie //replaces Arachnotron // : Arachnotron	//to be edited
{
	
	Default 
	{
		D4AbstractMonster.Replacing 'Arachnotron';
		D4AbstractMonster.Rune "ArachnotronRune", RuneChance_Arach;
		D4AbstractMonster.CrateDropAmount 2;
		D4AbstractMonster.CrateDropChance 32;
		D4AbstractMonster.CashAmount 80;
		Health 500;
		Radius 48;
		Height 64;
		Mass 600;
		Speed 12;
		PainChance 128;
		Monster;
		+DONTCORPSE
		+FLOORCLIP
		+BOSSDEATH
		SeeSound "Doom4/Monsters/Arachnotron/Sight";
		PainSound "Doom4/Monsters/Arachnotron/Pain";
		DeathSound "Doom4/Monsters/Arachnotron/Death";
		ActiveSound "Doom4/Monsters/Arachnotron/Idle";
		Obituary "$OB_BABY";
		PainChance "StunBomb", 255;
		PainChance "GloryKill", 255;
		WoundHealth 100;
		Radius 48;
		Tag "Arachnotron";
	}
	States
	{
	Spawn:
		ARAC AB 10 A_LookEx(label: "Sight");
		Loop;
	Sight:
		ARAC A 20;
	See:
		ARAC A 3 { D4Chase(); A_PlaySound("Player/Demon/ArachnotronStep"); }
		ARAC ABBCC 3 D4Chase();
		ARAC D 3 { D4Chase(); A_PlaySound("Player/Demon/ArachnotronStep"); }
		ARAC DEEFF 3 D4Chase();
		Goto See;
	Missile:
		ARAC A 20 BRIGHT A_FaceTarget();
		ARAC G 2 BRIGHT A_FaceTarget();
		ARAC H 2 BRIGHT A_SpawnProjectile("ArachnoPlasma",24,0,0);
		ARAC G 2 BRIGHT;
		ARAC H 2 BRIGHT A_SpawnProjectile("ArachnoPlasma",24,0,0);
		---- A 0 A_MonsterRefire(20,"Sight");
		Goto Missile+1;
	Pain:
		ARAC I 3;
		ARAC I 3 A_Pain();
		Goto See;
	Pain.StunBomb:
		ARAC I 0 { bNoPain = true; }
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#" 0 { bNoPain = false; }
		Goto See;
	Death:
		"####" "#" 0  //loot drop
		{
			bThruActors = true;
			
			A_SpawnItemEx("NewMeat",random(25,-25),random(25,-25),random(10,50), vel.x+random(4,-4), vel.y+ random(4,-4), random(3,4+4), 0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEVELOCITY);
			A_SpawnItemEx("NewMeat",random(25,-25),random(25,-25),random(10,50), vel.x+random(4,-4), vel.y+ random(4,-4), random(3,4+4), 0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEVELOCITY);
			A_SpawnItemEx("NewMeat",random(25,-25),random(25,-25),random(10,50), vel.x+random(4,-4), vel.y+ random(4,-4), random(3,4+4), 0,SXF_NOCHECKPOSITION|SXF_ABSOLUTEVELOCITY);
			/*
			if (RuneChance(RuneChance_Arach))
			{	A_SpawnItemEx("ArachnotronRune",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION); }
			*/
		}
		ARAC J 10 A_Scream();
		ARAC K 5 A_NoBlocking();
		ARAC LMNO 4;
		ARAC P -1
		{
			A_BossDeath();
			bCORPSE = true;
		}
		Stop;
	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
		TNT1 A 10 CanRaise
		{
			XDeathGush();
			A_NoBlocking();	//just in case
		}
		---- A RezTimer CanRaise { A_BossDeath(); bCORPSE = true; }
		Stop;
    Raise:
		---- A 0 CheckRespawn();
		ARAC P 5 DoResurrect(0);
		ARAC ONMLKJ 5;
		---- A 0 DoResurrect(1);
		Goto See;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("ArachnoHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		ARAC I 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		ARAC U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		ARAC AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" IIIIII 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" IIIIII 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION) ;
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
	}
}

Class ArachnoPlasma : D4AbstractMissile
{
	Default 
	{
		Projectile;
		Scale 0.07;
		Height 8;
		Radius 4;
		Speed 25;
		FastSpeed 30;
		Damage 2;	//because it travels faster and arachnos are more aggressive
		RenderStyle "Add";
		Alpha 0.99;
		+FORCEXYBILLBOARD
		SeeSound "Doom4/Monsters/PlasmaShot";
		DeathSound "baby/shotx";
		Translation "0:255=%[0,0,0]:[1.2,0.2,0.9]";
		DeathSound "Doom4/Weapon/PlasmaGun/PlasmaCrash";
		Decal "PurplePlasmaMonster";
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetScale(frandom(0.06,0.08));
			return A_Jump(256,random(1,26));
		}
	Moving:
		PLS1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 Light("PurpleSmallPoint1") Bright;
		PLS2 ABCDEF 1 Light("PurpleSmallPoint1") Bright;
		Loop;
	Death:
		TNT1 A 10 A_SpawnItemEx("D4ArachnoPuffBig1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		Stop;
	}
}

Class D4ArachnoPuffBig1 : D4PistolPuffBig1
{
	Default 
	{
		Scale 0.1;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			scaler = 0.025;
			if (HQ)
			{
				A_SpawnParticle("FFC5FF",SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,vel.z-0.06);
				A_SpawnParticle("FFC5FF",SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,vel.z-0.06);
				A_SpawnParticle("FF93FF",SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,vel.z-0.06);
				A_SpawnParticle("FF93FF",SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,vel.z-0.06);
				A_SpawnParticle("C175C1",SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,vel.z-0.06);
				A_SpawnParticle("C175C1",SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,vel.z-0.06);
			}
			return A_Jump(256,"Type1","Type2","Type3","Type4","Type5","Type6","Type7","Type8");
		}
		Goto Type1;
	}
}

//================================================================================================================
//================================================================================================================
//
//	Regular Doom version 
//
//================================================================================================================
//================================================================================================================
Class D4OldArachnotron : D4AbstractBiggie //  : Arachnotron
{	
	
	Default 
	{
		D4AbstractMonster.Replacing 'Arachnotron';
		D4AbstractMonster.Rune "ArachnotronRune", RuneChance_Arach;
		D4AbstractMonster.CrateDropAmount 2;
		D4AbstractMonster.CrateDropChance 32;
		D4AbstractMonster.CashAmount 80;
		Health 500;
		Radius 48;
		Height 64;
		Mass 600;
		Speed 12;
		PainChance 128;
		Monster;
		+FLOORCLIP
		+BOSSDEATH
		SeeSound "baby/sight";
		PainSound "baby/pain";
		DeathSound "baby/death";
		ActiveSound "baby/active";
		Obituary "$OB_BABY";
		
		PainChance "GloryKill", 255;
		PainChance "StunBomb", 255;
		WoundHealth 100;
		+DONTCORPSE
		Tag "Arachnotron";
	}
	States
	{
	Spawn:
		BSPI AB 10 A_Look();
		Loop;
	See:
		BSPI A 20;
		BSPI A 3 A_BabyMetal;
		BSPI ABBCC 3 D4Chase();
		BSPI D 3 A_BabyMetal;
		BSPI DEEFF 3 D4Chase();
		Goto See+1;
	Missile:
		BSPI A 20 BRIGHT A_FaceTarget();
		BSPI G 4 BRIGHT A_BspiAttack;
		BSPI H 4 BRIGHT;
		BSPI H 1 BRIGHT A_SpidRefire;
		Goto Missile+1;
	Pain:
		BSPI I 3;
		BSPI I 3 A_Pain();
		Goto See+1;
    Raise:
		BSPI P 5;
		BSPI ONMLKJ 5;
		Goto See+1;
		
	Pain.StunBomb:
		BSPI I 0 { bNoPain = true; }
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#######" 5 A_SpawnItemEx("StunBombSpark",0,random(10,-10),random(10,50),0,frandom(2,-2),frandom(0.1,2),0,SXF_NOCHECKPOSITION);
		"####" "#" 0 { bNoPain = false; }
		Goto See;
	
	GloryEnd:
		TNT1 A 0 A_Die("MeleePunch");
	Death.BerserkKill:
	Death.MeleePunch:
	Death.ChainsawPinata:
	XDeath:
		---- A 0 XDeathGush();
	Death:
		BSPI J 10 
		{
			A_Scream();
			bThruActors = true;
		}
		BSPI K 5 A_NoBlocking();
		BSPI LMNO 5;
		BSPI P -1 
		{	
			bCorpse = true;	
			A_BossDeath();
		}
		Stop;
	//------------------------------------------------------------------------
	// Start of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	Wound:
		"####" "#" 1
		{
			if(GetCvar("D4D_ExecutionsON"))
			{
				if(countinv("FinisherToken")==0) //if it isnt healing already
				{								//will heal and give the token that indicates it's executable
					A_SpawnItemEx("ArachnoHighlight",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION); //to highlight if ON, and to remove the token after the Monster; heals
					A_GiveInventory("FinisherToken",1);	//token to allow melee attack to execute
				}
				
				if(GetCvar("D4D_MonsterStagger")==1) //will the monsters stagger at all?
				{
					return ResolveState("Stagger");	//stays there for a few seconds
				}
				else
				{
					return ResolveState(null);
				}
			}
			return ResolveState(null);
		}
		Goto See;
	Stagger:
		BSPI I 0 
		{
			if(GetCvar("D4D_ExecutionHighlight")==1)
			{	return ResolveState("PrepareStaggerHighlight");}
			else
			{	return ResolveState("StagLooper");	}
		}
		Goto StagLooper;
	PrepareStaggerHighlight:
		BSPI U 0;
		Goto StagLooper;
	
	StagLooper:
		"####" "#" 1
		{
			if(!countinv("FinisherToken"))
			{
				return ResolveState("See");
			}
			if(GetCvar("D4D_NoisyStagger") && countinv("PainSoundToken"))
			{ 
				A_Pain(); 
				A_TakeInventory("PainSoundToken");
			}
			
			return ResolveState(null);
		}
		Loop;
		
	// Finisher attack(s) with animations ON
	Death.GloryKill:
		TNT1 A 0 { bSolid = false; }
		BSPI AA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION) ;
		"####" A 0
		{
			if(countinv("GloryKill1Token"))
			{	return ResolveState("GloryEnd1"); }
			
			if(countinv("GloryKill2Token"))
			{	return ResolveState("GloryEnd2"); }
			
			if(countinv("GloryKill3Token"))
			{	return ResolveState("GloryEnd3"); }
			return ResolveState(null);
		}
	GloryEnd1:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" IIIIII 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		Goto GloryEnd;
	GloryEnd2:
		"####" AAAAAAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" A 0 A_Pain();
		"####" IIIIII 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" AAAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION) ;
		Goto GloryEnd;
	GloryEnd3:
		"####" AAAA 1 A_Warp(AAPTR_TARGET,-50,0,0,180,WARPF_NOCHECKPOSITION);
		"####" I 0 A_ChangeVelocity(-8,0,10,CVF_RELATIVE);
		Goto GloryEnd;
		
	//------------------------------------------------------------------------
	// End of Stagger / Glory Kill states
	//------------------------------------------------------------------------
	}
}

Class OldArachnotronPlasma : D4AbstractMissile //replaces ArachnotronPlasma
{
	
	Default 
	{
		Radius 13;
		Height 8;
		Speed 25;
		Damage 5;
		Projectile; 
		+RANDOMIZE
		Scale 0.2;
		Alpha 0.99;
		Translation "0:255=%[0,0,0]:[1.3,0.7,0.3]";
		RenderStyle "Add";
		Decal "D4PlasmaMonster";
		SeeSound "Doom4/Monsters/PlasmaShot";
		DeathSound "baby/shotx";
	}
	
	States
	{
	Spawn:
		SPIR P 2 BRIGHT Light("OrangeSmallPoint2") 
		{
			if (HQ)
			{
				A_SpawnItemEx("MonPlasmaTrail",random(4,-4),random(4,-4),random(4,-4),0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATIoN);
			}
		}
		Loop;
	Death:
		//TNT1 AAAAAAA 0 A_SpawnItemEx("MonBlasterPuffParticle",0,0,0,frandom(5,-5),frandom(5,-5),frandom(5,-5),random(0,359),32,128);
		TNT1 A 0 A_SpawnItemEx("ZombiePlasmaBallPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		TNT1 A 3 Light("OrangeSmallPoint1");
		TNT1 A 3 Light("OrangeSmallPoint2");
		TNT1 A 3 Light("OrangeSmallPoint3");
		Stop;
	}
}

Class MonPlasmaTrail : Actor 
{
	Default 
	{
		+NOINTERACTION
		Scale 0.25;
		RenderStyle "Add";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Jump(240,4,8,12,16,20,24,28,32,36);
		X103 ABCDEFGHIJKLMNOPQRSTUVXYZ 2 Bright A_FadeOut(0.09);
		X104 ABCDEFGHIJKLMNOPQRSTUV 2 Bright A_FadeOut(0.09);
		Goto Spawn+2;
	}
}