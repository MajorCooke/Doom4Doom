//=================================================================================================
//=================================================================================================

//		Archvile

//=================================================================================================
//=================================================================================================
Class ArchvileRune : DemonRuneBase
{
	Default 
	{
		DemonRuneBase.Morph "ArchvileMorpher", "IamArchvile";
		Inventory.PickupMessage "Summoner rune";
		Scale 0.115;
	}
}

Class ArchvileMorpher: PowerupGiver
{
	Default 
	{
		Inventory.MaxAmount 1;
		Inventory.Amount 1;
		Powerup.Type "PowerArchvileMorph";
		Powerup.Duration -60;
		+Inventory.AutoActivate
	}
	States
	{
		Spawn:
			PLAY A 3;
			Loop;
	}
}

Class PowerArchvileMorph : PowerRuneBase
{
	Default 
	{
		PowerMorph.PlayerClass "PlayerArchvile";
		PowerMorph.MorphStyle (MRF_FULLHEALTH|MRF_UNDOBYDEATH|MRF_UNDOBYDEATHSAVES|MRF_UNDOBYTOMEOFPOWER|MRF_LOSEACTUALWEAPON|MRF_NEWTIDBEHAVIOUR|MRF_UNDOALWAYS|MRF_FAILNOTELEFRAG);
		PowerMorph.UnMorphFlash "DemonRuneMorphOff";
		PowerMorph.MorphFlash "DemonRuneMorphOn";
	}
}


Class PlayerArchvile : DemonPlayerBase
{
	double USpeed;
	
	Default 
	{
		Speed 1;
		Health 1000;
		Radius 16;
		Height 56;
		Mass 600;
		PainChance 20;
		Gravity 0.7;
		Player.JumpZ 7;
		Player.MorphWeapon "D4DArchvileWeapon";
		Player.ViewHeight 56;
		Player.AttackZOffset 10;
		Player.CrouchSprite "DIAB";
		Player.SoundClass "PlayerDemonCommon";
		PainSound "Doom4/Monsters/Archvile/Pain";
		DeathSound "Doom4/Monsters/Archvile/Death";
		Player.ForwardMove 1.2, 1.2;
		Player.SideMove 1.2, 1.2;
		DamageFactor "Normal", 0.5;
		+NOSKIN
		+SLIDESONWALLS
		+THRUSPECIES
		+MTHRUSPECIES
		Species "DemonPlayerBase";
	}
	States
	{
	Spawn:
		DIAB A -1;
		Stop;
	See:
		DIAB ABCDEF 4;
		Loop;
	Pain:
		DIAB Q 5 A_Pain();
		Goto Spawn;
	Missile:
	Melee:
		DIAB MLKJI 4;
		Goto Spawn;
	Death:
		TNT1 A 3 A_Scream();
		TNT1 B 3 A_NoBlocking();
		TNT1 CDEFGH 3;
		TNT1 I -1;
		Stop;
	Overlay.IdleSound:
		TNT1 A 35 NoFastOverlay(OverlayID());
		TNT1 A 0 
		{
			if (!GetCvar("D4D_SilentMorphs") && random(1,4)==4)
			{	PlaySound("Doom4/Monsters/Archvile/Idle",5);	}
		}
		Loop;
	Overlay.Steps:
		TNT1 A 5
		{
			NoFastOverlay(OverlayID());
			USpeed = vel.XY dot vel.XY;
			if(A_CheckFloor("Null"))
			{
				if(USpeed > 150)
				{
					PlaySound("Player/Demon/LightDemonStep",CHAN_AUTO,0.5);
					A_SetTics(12);
				}
				else if(USpeed > 20)
				{
					PlaySound("Player/Demon/LightDemonStep",CHAN_AUTO,0.5);
					A_SetTics(15);
				}
			}
		}
		Wait;
	}
}

Class D4DArchvileWeapon : DemonWeaponBase
{
	int count;
	int power;
	Default 
	{
		Tag "Argent Blast";
	}
	
	action void DropMonster(double ang)
	{
		let mo = ArchieMonsterDropper(A_FireProjectile("ArchieMonsterDropper",ang,false,0,1));
		if (mo)	
		{
			mo.target = invoker.owner;
			mo.master = invoker.owner;
			mo.owner = invoker.owner;
			mo.Power = invoker.power;
		}
	}
	
	States
	{
	Ready:
		TNT1 A 1 A_WeaponReady(WRF_DISABLESWITCH);
		Loop;
	Deselect:
		TNT1 A 1 A_Lower;
		Loop;
	Select:
		TNT1 A 1 A_Raise;
		Loop;
	Fire:
		---- A 1 CheckPrimary();
		Goto Ready;
	AltFire:
		---- A 1 CheckSecondary();
		Goto Ready;
	FireP1:
	FireP2:
	FireP3:
	FireP4:
	FireP5:
	FireP6:
	FireP7:
	FireP0:
		TNT1 A 0 
		{
			invoker.power = GetPowerLevel();
			PlaySound("Doom4/Monsters/ArgentCharge",6);
			if (GetCvar("HQEffectsWeapons"))
			{	A_SpawnItemEx("SummonerPlayerMuzzle",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);	}
		}
	FireLooper:
		TNT1 A 1
		{
			A_GiveInventory("PlayerArchvileCharges", 2 * (1 + invoker.power));
			invoker.count = (invoker.count + 1) % 3;
			if (!invoker.count)
				A_FireBullets(0,0,1,0,"PlayerSummonerSparks",FBF_NORANDOMPUFFZ,1536);
			if (CountInv("PlayerArchvileCharges")>=90)
				A_QuakeEx(0,1,0,5,0,48,"",QF_Relative,0,0,0,0,0,1);
		}
		TNT1 A 0 A_Refire("FireLooper");
		Goto Release;
	Release:
		TNT1 A 12 
		{
			A_RemoveChildren(true,RMVF_EVERYTHING,"SummonerPlayerMuzzle");
			A_StopSound(6);
			if (CountInv("PlayerArchvileCharges")>=90)
			{	
				A_FireProjectile("PlayerSummonerProjectile4",0,0,0);	
				PlaySound("Doom4/Monsters/ArgentWaveFire",CHAN_WEAPON);
				A_SetBlend("DarkRed",0.5,35);
			}
			else if (CountInv("PlayerArchvileCharges")>=60)
			{	
				A_FireProjectile("PlayerSummonerProjectile3",0,0,0);	
				PlaySound("Doom4/Monsters/ArgentWaveFire",CHAN_WEAPON,0.75);
				A_SetBlend("DarkRed",0.4,25);
			}
			else if (CountInv("PlayerArchvileCharges")>=30)
			{	
				A_FireProjectile("PlayerSummonerProjectile2",0,0,0);	
				PlaySound("Doom4/Monsters/ArgentWaveFire",CHAN_WEAPON,0.5);
				A_SetBlend("DarkRed",0.25,15);
			}
			else
			{	
				A_FireProjectile("PlayerSummonerProjectile1",0,0,0);	
				PlaySound("Doom4/Monsters/ArgentWaveFire",CHAN_WEAPON,0.25);
				A_SetBlend("DarkRed",0.1,15);
			}
			A_SetInventory("PlayerArchvileCharges",0);
		}
		Goto Ready;
		
	AltFireP1:
	AltFireP2:
	AltFireP3:
	AltFireP4:
	AltFireP5:
	AltFireP6:
	AltFireP7:
	AltFireP0:
		TNT1 A 25
		{
			PlaySound("Doom4/Monsters/ArgentCharge",6);
			A_QuakeEx(0,1,1,30,0,48,"",QF_Relative,0,0,0,0,0,1);
			A_SetInventory("PlayerArchvileCharges",90);
			
			if (GetCvar("HQEffectsWeapons"))
			{	A_SpawnItemEx("SummonerPlayerMuzzle",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);	}
		}
		TNT1 A 10 
		{
			invoker.power = GetPowerLevel();
			
			Switch (invoker.power)
			{
				// 5 monsters
				Default:
				Case 7:		// white
				{
					for (int i = -90; i <= 90; i += 45)
						DropMonster(i);
					break;
				}
				// 4 monsters
				Case 6:		// black
				{
					for (int i = -60; i <= 60; i += 40)
						DropMonster(i);
					break;
				}
				// 3 monsters
				Case 5:		// artifact
				Case 4:		// legendary
				{
					for (int i = -45; i <= 45; i += 45)
						DropMonster(i);
					break;
				}
				// 2 monsters
				Case 3:		// epic
				Case 2:		// rare
				{
					for (int i = -30; i <= 30; i += 60)
						DropMonster(i);
					break;
				}
				// 1 monster
				Case 1:		// uncommon
				Case 0:		// normal
					DropMonster(0);
					break;
			}
			
			A_RemoveChildren(true,RMVF_EVERYTHING,"SummonerPlayerMuzzle");
			A_SetInventory("PlayerArchvileCharges",0);
		}
		Goto Ready;
	Spawn:
		SHOT A 0;
		Stop;
	}
}	

Class ArchieMonsterDropper : D4Actor 
{
	Actor owner;
	int Power;
	Default 
	{
		Projectile;
		+FRIENDLY
		+FLOORCLIP
		+DONTSPLASH
		-NOGRAVITY
		+SKYEXPLODE
		+EXPLODEONWATER
		+DONTREFLECT
		+BLOODLESSIMPACT
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		+BOUNCEONACTORS
		+ALLOWBOUNCEONACTORS
		BounceFactor 1.0;
		Radius 20;
		Height 8;
		Speed 16;
		DeathSound "";
		RenderStyle "None";
		Scale 0.4;
	}
	
	override bool CanCollideWith(Actor other, bool passive)
	{
		if (!passive)
		{
			Actor victim = other;
			return !(!victim || victim.health < 1 || victim.bSHOOTABLE || victim.bVULNERABLE);
		}
		return true;
	}
	
	override int SpecialMissileHit(Actor victim)
	{
		if (!victim || victim.health < 1 || victim.bSHOOTABLE || victim.bVULNERABLE)
			return 1;
			
		return -1;
	}
	
	States
	{
	Spawn:
		TNT1 A 2;
		TNT1 A 1;
		Wait;
	Death:
		TNT1 A 5 
		{
			Spawn("SummonTeleportFog", pos, ALLOW_REPLACE);
			SetZ(GetZAt());
			String s = "ArchFriendSpawner";
			if (invoker.power > 0) s = s..invoker.power;
			Class<Actor> check = s;
			if (check)
			{
				A_SpawnItemEx(check,0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_SETMASTER);
				/*
				let spawner = ArchFriendSpawner(Spawn(check,pos));
				if (spawner)
				{
					spawner.CopyFriendliness(owner,false,false);
					spawner.Target = owner;
					spawner.Master = owner;
					spawner.Tracer = Tracer;
					spawner.Dropper = self;
					spawner.Angle = Angle;
				}
				*/
			}
		//	A_SpawnItemEx("ArchFriendSpawner",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_SETMASTER);
		}
		Stop;
	} 
}


Class ArchFriendSpawner7 : ArchFriendSpawner
{
	Default
	{
		ArchFriendSpawner.Power 7;
		DropItem "D4Cyberdemon", 255, 		1;
		DropItem "D4Archvile", 255, 		5;
		DropItem "D4ChaingunGuy", 255, 		20;
		DropItem "D4BaronOfHell", 255, 		20;
		DropItem "D4Arachnotron", 255,		25;
		DropItem "D4FatsoTech", 255,		25;
		DropItem "D4Cacodemon", 255,		35;
		DropItem "D4Revenant", 255, 		35;
	}
}

Class ArchFriendSpawner6 : ArchFriendSpawner
{
	Default
	{
		ArchFriendSpawner.Power 6;
		DropItem "D4Archvile", 255, 		2;
		DropItem "D4ChaingunGuy", 255, 		10;
		DropItem "D4Arachnotron", 255,		15;
		DropItem "D4FatsoTech", 255,		15;
		DropItem "D4BaronOfHell", 255, 		15;
		DropItem "D4Cacodemon", 255,		25;
		DropItem "D4Revenant", 255, 		25;
	}
}

Class ArchFriendSpawner5 : ArchFriendSpawner
{
	Default
	{
		ArchFriendSpawner.Power 5;
		DropItem "D4Arachnotron", 255,		5;
		DropItem "D4FatsoTech", 255,		5;
		DropItem "D4BaronOfHell", 255, 		5;
		DropItem "D4ChaingunGuy", 255, 		10;
		DropItem "D4HellKnight", 255, 		15;
		DropItem "D4Cacodemon", 255,		15;
		DropItem "D4Revenant", 255, 		15;
	}
}

Class ArchFriendSpawner4 : ArchFriendSpawner
{
	Default
	{
		ArchFriendSpawner.Power 4;
		DropItem "D4Arachnotron", 255,		2;
		DropItem "D4FatsoTech", 255,		2;
		DropItem "D4Cacodemon", 255,		4;
		DropItem "D4ChaingunGuy", 255, 		3;
		DropItem "D4DoomImp", 255, 			5;
		DropItem "D4Demon", 255, 			5;
		DropItem "D4Revenant", 255, 		6;
		DropItem "D4HellKnight", 255, 		5;
		DropItem "D4BaronOfHell", 255, 		1;
	}
}

Class ArchFriendSpawner3 : ArchFriendSpawner
{
	Default
	{
		ArchFriendSpawner.Power 3;
		DropItem "D4FatsoTech", 255,		2;
		DropItem "D4Arachnotron", 255,		2;
		DropItem "D4Cacodemon", 255,		4;
		DropItem "D4ChaingunGuy", 255, 		3;
		DropItem "D4DoomImp", 255, 			5;
		DropItem "D4Demon", 255, 			5;
		DropItem "D4Revenant", 255, 		6;
		DropItem "D4HellKnight", 255, 		5;
		DropItem "D4BaronOfHell", 255, 		1;
	}
}

Class ArchFriendSpawner2 : ArchFriendSpawner
{
	Default
	{
		ArchFriendSpawner.Power 2;
		DropItem "D4Arachnotron", 255,		1;
		DropItem "D4Cacodemon", 255,		2;
		DropItem "D4ChaingunGuy", 255, 		2;
		DropItem "D4DoomImp", 255, 			3;
		DropItem "D4Demon", 255, 			3;
		DropItem "D4Revenant", 255, 		4;
		DropItem "D4HellKnight", 255, 		4;
		DropItem "D4BaronOfHell", 255, 		1;
	}
}

Class ArchFriendSpawner1 : ArchFriendSpawner
{
	Default
	{
		ArchFriendSpawner.Power 1;
		DropItem "D4Cacodemon", 255,		2;
		DropItem "D4ChaingunGuy", 255, 		2;
		DropItem "D4DoomImp", 255, 			2;
		DropItem "D4Demon", 255, 			2;
		DropItem "D4Revenant", 255, 		4;
		DropItem "D4HellKnight", 255, 		4;
		DropItem "D4BaronOfHell", 255, 		1;
	}
}

Class ArchFriendSpawner : RandomSpawner
{
	ArchieMonsterDropper Dropper;
	Array<String> Monsters;
	Array<Int> Weights;
	DemonPlayerBase Spawner;
	uint Power;
	
	Property Power: Power;
	Default 
	{
		+FRIENDLY
		-COUNTKILL
		ArchFriendSpawner.Power 0;
		DropItem "D4ChaingunGuy", 255, 2;
		DropItem "D4DoomImp", 255, 2;
		DropItem "D4Demon", 255, 2;
		DropItem "D4Revenant", 255, 4;
		DropItem "D4HellKnight", 255, 4;
		DropItem "D4BaronOfHell", 255, 1;
	}

	override void PostSpawn(Actor spawned)
	{
		if (!spawned)	return;
			
		spawned.bFRIENDLY = true;
		spawned.bNOBLOCKMONST = true;
		if (!Spawner) Spawner = DemonPlayerBase(master);
		
		if (Spawner)
		{
			Power = Spawner.PowerLevel;
			if (Power < 1)	return;
			spawned.CopyFriendliness(master, false, false);
			Switch (power)
			{
				Default:
				/*
				Case 6:
				Case 5:
				Case 4:
				Case 3:
				Case 2:
				Case 1:
				*/
					spawned.Species = "DemonPlayerBase";
					spawned.bTHRUSPECIES = true;
					spawned.bMTHRUSPECIES = true;
					spawned.bDONTHARMSPECIES = true;
					break;
			}
		}
	}
}

Class FriendToken : Inventory { Default { Inventory.MaxAmount 7; } }

//-----------------------------------------------
// Primary

//************
//to track how much has the shot charged
Class PlayerArchvileCharges : Inventory { Default { Inventory.MaxAmount 90;} }

//************
//main Projectile;
Class PlayerSummonerProjectileBase : FastProjectile
{
	Default 
	{
		Projectile;
		Speed 80;
		Radius 8;
		Height 16;
		DamageFunction (random(300,500));
		RenderStyle "Add";
		Xscale 0.3;
		Yscale 0.8;
		+EXTREMEDEATH
		+RIPPER
		Translation "0:255=%[0,0,0]:[1.0,0.0,0.0]";
		MissileType "SummonerTrailSpawner";
		MissileHeight 8;
	}
	States
	{
	Spawn:
		X016 ABCDEFGHIJKLMNOPQRSTUVWXY 1 Bright A_Explode(20,64,0);
		Loop;
	Death:
		TNT1 A 10;
		Stop;
		
	}
}
Class PlayerSummonerProjectile1 : PlayerSummonerProjectileBase
{
	Default 
	{
		Xscale 0.1;
		Yscale 0.24;
		Speed 30;
		Damage 2;
		MissileType "PlayerSummonerTrailSpawner1";
	}
	States
	{	Spawn:	X016 ABCDEFGHIJKLMNOPQRSTUVWXY 1 Bright A_Explode(10,64,0);		Loop;}
}
Class PlayerSummonerProjectile2 : PlayerSummonerProjectileBase
{
	Default 
	{
		Xscale 0.2;
		Yscale 0.48;
		Speed 45;
		Damage 5;
		MissileType "PlayerSummonerTrailSpawner2";
	}
	States
	{	Spawn:	X016 ABCDEFGHIJKLMNOPQRSTUVWXY 1 Bright A_Explode(20,64,0);		Loop;}
}
Class PlayerSummonerProjectile3 : PlayerSummonerProjectileBase
{
	Default 
	{
		Xscale 0.25;
		Yscale 0.6;
		Speed 60;
		Damage 8;
		MissileType "PlayerSummonerTrailSpawner3";
	}
	States
	{	Spawn:	X016 ABCDEFGHIJKLMNOPQRSTUVWXY 1 Bright A_Explode(30,96,0);		Loop;}
}
Class PlayerSummonerProjectile4 : PlayerSummonerProjectileBase
{
	Default 
	{
		Xscale 0.3;
		Yscale 0.8;
		Speed 80;
		Damage 15;
		MissileType "PlayerSummonerTrailSpawner4";
	}
	States
	{	Spawn:	X016 ABCDEFGHIJKLMNOPQRSTUVWXY 1 Bright A_Explode(40,128,0);		Loop;}
}

//************
// trails for the Projectile;
Class PlayerSummonerTrailSpawner1 : Actor 
{
	Default 
	{
		+NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 3 NODELAY
		{
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,10),0,0,frandom(0.5,1),0,SXF_NOCHECKPOSITION,210);
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,-10),0,0,frandom(-0.5,-1),0,SXF_NOCHECKPOSITION,210);
		}
		Stop;
	}
}
Class PlayerSummonerTrailSpawner2 : PlayerSummonerTrailSpawner1
{
	States
	{
	Spawn:
		TNT1 A 3 NODELAY
		{
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,10),0,0,frandom(0.5,2),0,SXF_NOCHECKPOSITION,180);
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,-10),0,0,frandom(-0.5,-2),0,SXF_NOCHECKPOSITION,180);
		}
		Stop;
	}
}
Class PlayerSummonerTrailSpawner3 : PlayerSummonerTrailSpawner1
{
	States
	{
	Spawn:
		TNT1 A 3 NODELAY
		{
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,10),0,0,frandom(0.5,3),0,SXF_NOCHECKPOSITION,128);
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,-10),0,0,frandom(-0.5,-3),0,SXF_NOCHECKPOSITION,128);
		}
		Stop;
	}
}

Class PlayerSummonerTrailSpawner4 : PlayerSummonerTrailSpawner1
{
	States
	{
	Spawn:
		TNT1 A 3 NODELAY
		{
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,10),0,0,frandom(0.5,4),0,SXF_NOCHECKPOSITION);
			A_SpawnItemEx("SummonerTrail",-2,0,random(0,-10),0,0,frandom(-0.5,-4),0,SXF_NOCHECKPOSITION);
		}
		Stop;
	}
}


//************
// puff on the wall stuff

Class PlayerSummonerSparks : Actor 
{
	Default 
	{
		+NOINTERACTION
		+BLOODLESSIMPACT
		+FORCEXYBILLBOARD
		+ALWAYSPUFF
		+PUFFONACTORS
		Translation "0:255=%[0,0,0]:[1.0,0.0,0.0]";
		Scale 0.4;
		RenderStyle "Add";
		Alpha 0.99;
		Height 1;
		Radius 1;
	}
	States
	{
	Spawn:
		DB08 A 0 Nodelay A_Jump(256,2,4,6,8,10,12,14,16,18,20,22,24);
		DB08 ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY 0 Bright A_Jump(256,"PlayOff");
	PlayOff:
		"####" "####" 1 Bright
		{			
			A_SetScale(frandom(0.55,0.7));
			A_SpawnItemEx("PlayerSummonerTargetingSparks",0,0,0,1,frandom(3,-3),frandom(0.5,-0.5), 0,SXF_NOCHECKPOSITION,128);
		}
		Stop;
	}
}

Class PlayerSummonerTargetingSparks : Actor 
{
	Default 
	{
		+NOINTERACTION
		Scale 0.7;
		RenderStyle "Add";
		Alpha 0.99;
		Height 1;
		Radius 1;
		+FORCEXYBILLBOARD
		Translation "0:255=%[0,0,0]:[1.0,0.0,0.0]";
	}
	States
	{
	Spawn:
		X079 A 0 NODELAY A_Jump(256,1,2,3,4,5,6,7,8);
		X079 ABCDEFGH 0 A_Jump(256,"PlayOff");
	PlayOff:
		"####" "###" 1;
		Stop;
	}
}



//************
// hand sparks effect

Class SummonerPlayerMuzzle : Actor 
{
	const Flags = WARPF_NOCHECKPOSITION|WARPF_COPYPITCH;
	const Distance = 19;
	const YOff = 16;
	const ZOff = 45;
	double UPos;
	int user_t;
	
	Default 
	{
		Projectile;
		+NOINTERACTION
		RenderStyle "None";
		Scale 0.0;
		Alpha 0.01;
		+FORCEXYBILLBOARD
		Translation "0:255=%[0,0,0]:[2.0,1.3,0.3]";
	}
	States
	{
	Spawn:
		X060 A 1 BRIGHT NoDelay
		{
			if (master) { pitch = master.pitch; } //Grab the pitch...
			
			// And set a multiplier for taking from the distance so it actually goes well with the gun.
			
			if (pitch > 0) //Looking down
			{	UPos = (sin(pitch) * 12);	}
			else //Looking up
			{	UPos = (sin(pitch) * 6);	}
			
			
			A_Warp(AAPTR_MASTER,
				(cos(-pitch)*(Distance)) - UPos,
				YOff,
				(ZOff*GetCrouchFactor(AAPTR_MASTER))+(sin(-pitch)*(Distance)),0,Flags|WARPF_INTERPOLATE);
			user_t++;
			A_SpawnItemEx("PlayerSummonerHandSparks",0,0,-3,sin(-pitch)*frandom(0.25,0.25),frandom(-0.7,-0.7),cos(pitch)*frandom(0.8,-2.5),0,SXF_NOCHECKPOSITION,255-(user_t*6));
			A_SpawnItemEx("PlayerSummonerHandSparks",0,-30,-3,sin(-pitch)*frandom(0.25,0.25),frandom(-0.7,-0.7),cos(pitch)*frandom(0.8,-2.5),0,SXF_NOCHECKPOSITION,255-(user_t*6));
		}
		Loop;
	Nothing:
		TNT1 A 100;
		Stop;
	}
}


Class PlayerSummonerHandSparks : SummonerHandSparks	//spawned in the hands of the archvile
{
	Default 
	{
		+NOTIMEFREEZE
		+NOINTERACTION
		+FORCEXYBILLBOARD
		+ROLLSPRITE
		+ROLLCENTER
		Scale 0.15;
		RenderStyle "Add";
		Translation "0:255=%[0,0,0]:[2.0,0.0,0.0]";
	}
	States
	{
	Spawn:
		X079 A 0 NoDelay
		{
			bSPRITEFLIP = random(0,1);
			A_SetRoll(random(0,359));
			Frame = random(Fr_A,Fr_H);
		}
	Perform:
		"####" "#" 1 Bright 
		{
			A_FadeOut(0.05);
			A_SetScale(Scale.X+0.006);
		}
		Loop;
	}
}