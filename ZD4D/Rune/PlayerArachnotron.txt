//=================================================================================================
//=================================================================================================

//		Arachnotron

//=================================================================================================
//=================================================================================================
Class ArachnotronRune : DemonRuneBase
{
	Default 
	{
		DemonRuneBase.Morph "ArachnotronMorpher", "IamArachnotron";
		Inventory.PickupMessage "Arachnotron rune";
	}
}

Class ArachnotronMorpher : PowerupGiver
{
	Default 
	{
		Inventory.MaxAmount 1;
		Inventory.Amount 1;
		Powerup.Type "PowerArachnotronMorph";
		Powerup.Duration -60;
		+Inventory.AutoActivate
	}
	States
	{
		Spawn:
			PLAY A 3;
			Loop;
	}
}

Class PowerArachnotronMorph : PowerRuneBase
{
	Default 
	{
		PowerMorph.PlayerClass "PlayerArachnotron";
		PowerMorph.MorphStyle (MRF_FULLHEALTH|MRF_UNDOBYDEATH|MRF_UNDOBYDEATHSAVES|MRF_UNDOBYTOMEOFPOWER|MRF_LOSEACTUALWEAPON|MRF_NEWTIDBEHAVIOUR|MRF_UNDOALWAYS|MRF_FAILNOTELEFRAG);
		PowerMorph.UnMorphFlash "DemonRuneMorphOff";
		PowerMorph.MorphFlash "DemonRuneMorphOn";
	}
}


Class PlayerArachnotron : DemonPlayerBase
{
	Default 
	{
		Speed 1;
		Health 500;
		Radius 30;
		Height 64;
		Mass 600;
		PainChance 20;
		Gravity 0.7;
		Player.JumpZ 7;
		Player.MorphWeapon "D4DArachnotronWeapon";
		Player.ViewHeight 56;
		Player.AttackZOffset 10;
		Player.CrouchSprite "ARAC";
		Player.SoundClass "PlayerDemonCommon";
		PainSound "Doom4/Monsters/Arachnotron/Pain";
		DeathSound "Doom4/Monsters/Arachnotron/Pain";
		Player.ForwardMove 0.85, 0.425;
		Player.SideMove 0.85, 0.425;
		DamageFactor "Normal", 0.5;
		+NOSKIN
	}
	States
	{
	Spawn:
		ARAC A -1;
		Stop;
	See:
		ARAC ABCDEF 3;
		Loop;
	Pain:
		ARAC I 5 A_Pain();
		Goto Spawn;
	Missile:
	Melee:
		ARAC GH 4;
		Goto Spawn;
	Death:
		TNT1 A 3 A_Scream();
		TNT1 B 3 A_NoBlocking();
		TNT1 CDEFGH 3;
		TNT1 I -1;
		Stop;
	Overlay.IdleSound:
		TNT1 A 35;
		TNT1 A 0 
		{
			NoFastOverlay(OverlayID());
			//checks if "fire/altfire" to avoid the idle sound interrupting stuff
			if ((GetPlayerInput(MODINPUT_BUTTONS) & BT_ATTACK  )|| (GetPlayerInput(MODINPUT_BUTTONS) & BT_ALTATTACK  ))
			{
				//A_PrintBold("Firing something",0.2);
			}
			else
			{
				if (!GetCvar("D4D_SilentMorphs") && random(1,5)==5)
				{	PlaySound("Doom4/Monsters/Arachnotron/Idle",5);	}
			}
		}
		Loop;
	
	Overlay.Steps:
		TNT1 A 0 NoFastOverlay(OverlayID());
		TNT1 A 18
		{
			if(((vel.XY dot vel.XY) > 2.0) && A_CheckFloor("Null"))
			{
				PlaySound("Player/Demon/ArachnotronStep",CHAN_BODY);
			}
		}
		Wait;
	}
}

Class D4DArachnotronWeapon : DemonWeaponBase
{
	Default 
	{
		Tag "Demonic Plasma Launcher";
	}
	
	action void FirePlasma(int amt, bool alt)
	{
		if (alt)
		{
			for (int i = 0; i < amt; i++)
			{
				let mo = PlayerArachnoPlasma2(A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0));
				if (mo)	mo.SetPowerLevel(GetPowerLevel());
			}
		}
		else
		{
			for (int i = 0; i < amt; i++)
			{
				let mo = PlayerArachnoPlasma(A_FireProjectile("PlayerArachnoPlasma",0,0,0));
				if (mo)	mo.SetPowerLevel(GetPowerLevel());
			}
		}
	}
	
	States
	{
	Ready:
		ARPL MLMMLMLL 1 A_WeaponReady(WRF_DISABLESWITCH);
		Loop;
	Deselect:
		ARPL M 1 A_Lower;
		Loop;
	Select:
		ARPL M 1 A_Raise;
		Loop;
	Fire:
		---- A 1 CheckPrimary();
		Goto Ready;
	AltFire:
		---- A 1 CheckSecondary();
		Goto Ready;
		
	FireP1:
	FireP2:
	FireP3:
	FireP4:
	FireP5:
	FireP6:
	FireP7:
	FireP0:
		ARPL N 1
		{
			PlaySound("Doom4/Monsters/PlasmaShot",CHAN_WEAPON,0.7);
		//	A_FireProjectile("PlayerArachnoPlasma",0,0,0);
			FirePlasma(1, false);
			A_SetBlend("Purple",0.05,3);
			A_SetViewPitch(viewpitch-0.9, SPF_INTERPOLATE);
		}
		ARPL JKL 1 A_SetViewPitch(viewpitch+0.3, SPF_INTERPOLATE);
		ARPL N 1
		{
			PlaySound("Doom4/Monsters/PlasmaShot",7,0.7);
		//	A_FireProjectile("PlayerArachnoPlasma",0,0,0);
			FirePlasma(1, false);
			A_SetBlend("Purple",0.05,3);
			A_SetViewPitch(viewpitch-0.9, SPF_INTERPOLATE);
		}
		ARPL IJK 1 A_SetViewPitch(viewpitch+0.3, SPF_INTERPOLATE);
		ARPL L 1 A_Refire;
		Goto Ready;
	AltFireP1:
	AltFireP2:
	AltFireP3:
	AltFireP4:
	AltFireP5:
	AltFireP6:
	AltFireP7:
	AltFireP0:
		ARPL N 1 
		{
			PlaySound("Doom4/Monsters/PlasmaShotgun",CHAN_WEAPON);
			FirePlasma(8, true);
			/*
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			A_FireProjectile("PlayerArachnoPlasma2",frandom(1.0,-1.0),0);
			*/
			A_SetViewPitch(viewpitch-5, SPF_INTERPOLATE);
		}
		ARPL AAABB 1 A_SetViewPitch(viewpitch+1, SPF_INTERPOLATE);
		ARPL BCCDDEEFFG 1; //A_SetViewPitch(viewpitch+.01, SPF_INTERPOLATE);
		ARPL IJKL 1;
		Goto Ready;
		
		
	Flash:
		CHGF A 5 Bright A_Light1();
		Goto LightDone;
		CHGF B 5 Bright A_Light2();
		Goto LightDone;


	Spawn:
		SHOT A 0;
		Stop;
	}
}
/*
D4D_Red
D4D_Orange
D4D_Green
D4D_Blue
D4D_Purple
D4D_Black
D4D_White

pointlight PurpleSmallPoint1
{
    color 0.5 0.0 0.5
    size 30
	//attenuate 1
}
*/

mixin Class D4D_Arachnocolors
{
	Color col1, col2;
	private int powerlevel;
	
	void SetPowerLevel(int lev)
	{
		lev = Clamp(lev, 0, 7);
		powerlevel = lev;
		Switch(lev)
		{
			Default:
				col1 = Color("FFC5FF");
				Translation = Default.Translation;
				break;
			Case 1:
				col1 = Color(255,	000,	255,	000);
				A_SetTranslation('D4D_Green');
				break;
			Case 2:
				col1 = Color(255,	000,	000,	255);
				A_SetTranslation('D4D_Blue');
				break;
			Case 3:
				col1 = Color(255,	255,	000,	255);
				A_SetTranslation('D4D_Purple');
				break;
			Case 4:
				col1 = Color(255,	255,	128,	000);
				A_SetTranslation('D4D_Orange');
				break;
			Case 5:
				col1 = Color(255,	255,	000,	000);
				A_SetTranslation('D4D_Red');
				break;
			Case 6:
				col1 = Color(255,	064,	064,	064);
				A_SetTranslation('None');
				break;
			Case 7:
				col1 = Color(255,	255,	255,	255);
				A_SetTranslation('None');
				break;
		}
		col2 = col1;
		col2.r /= 2;
		col2.g /= 2;
		col2.b /= 2;
		Color coll = col2;
		if (powerlevel >= 6)	coll = Color("FFFFFF");
		int style = (powerlevel == 6) ? STYLE_Subtract : STYLE_Add;
		A_SetRenderStyle(1, style);
		SetLightColor(coll);
	}
	
	private void SetLightColor(Color lcol, bool subtract = false)
	{
		int flags = DynamicLight.LF_Attenuate;
		if (subtract) 
			flags |= DynamicLight.LF_Subtractive;
		A_AttachLight("ArachnoLight", DynamicLight.PointLight, lcol, 30, 30, flags);
	}
	
	override int SpecialMissileHit(Actor victim)
	{
		if (!victim || victim.bKILLED || victim.bCORPSE || victim == target)
			return 1;
			
		victim.DamageMobj(self, target, 7 * random(1,8) + 7 * powerlevel * 2, DamageType);
		return -1;
	}
	
	void ParticleFX()
	{
		A_SpawnParticle(col1,SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,0);
		A_SpawnParticle(col2,SPF_FULLBRIGHT,random(15,30),random(2,3),0,0,0,0,frandom(0.85,-0.85),frandom(0.85,-0.85),frandom(-0.85,0.85),0,0,0);
	}
	
}

Class PlayerArachnoPlasma : ArachnoPlasma
{
	mixin D4D_Arachnocolors;
	Default 
	{
		Speed 30;
		Damage 0;
		SeeSound "";
		+EXTREMEDEATH
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetScale(frandom(0.06,0.08));
			return A_Jump(256,random(1,26));
		}
	Moving:
		PLS1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 Bright ParticleFX();
		PLS2 ABCDEF 1 Bright ParticleFX();
		Loop;
	}
}

Class PlayerArachnoPlasma2 : ArachnoPlasma
{
	mixin D4D_Arachnocolors;
	Default 
	{
		Speed 45;
		Damage 0;
		SeeSound "";
		+EXTREMEDEATH
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			ThrustThingZ(0,random(5,-5),0,1);
			A_SetScale(frandom(0.06,0.08));
			return A_Jump(256,random(1,26));
		}
	Moving:
		PLS1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 Bright ParticleFX();
		PLS2 ABCDEF 1 Bright 
		{
			ParticleFX();
			A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,1));
		}
		Loop;
	}
}